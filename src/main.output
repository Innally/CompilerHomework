Terminals unused in grammar

   BOOL
   POINTER


State 0 conflicts: 1 shift/reduce
State 1 conflicts: 1 shift/reduce
State 2 conflicts: 1 shift/reduce
State 3 conflicts: 2 shift/reduce
State 11 conflicts: 2 shift/reduce
State 12 conflicts: 1 shift/reduce
State 19 conflicts: 7 shift/reduce
State 20 conflicts: 1 shift/reduce
State 21 conflicts: 1 shift/reduce
State 22 conflicts: 1 shift/reduce
State 25 conflicts: 1 shift/reduce
State 41 conflicts: 5 shift/reduce
State 46 conflicts: 1 shift/reduce
State 51 conflicts: 1 shift/reduce
State 54 conflicts: 1 shift/reduce
State 56 conflicts: 1 shift/reduce
State 57 conflicts: 1 shift/reduce
State 58 conflicts: 1 shift/reduce
State 59 conflicts: 1 shift/reduce
State 60 conflicts: 1 shift/reduce
State 61 conflicts: 1 shift/reduce
State 62 conflicts: 1 shift/reduce
State 65 conflicts: 2 shift/reduce
State 66 conflicts: 1 shift/reduce
State 67 conflicts: 34 reduce/reduce
State 68 conflicts: 2 shift/reduce
State 77 conflicts: 7 shift/reduce
State 78 conflicts: 7 shift/reduce
State 79 conflicts: 7 shift/reduce
State 80 conflicts: 7 shift/reduce
State 81 conflicts: 7 shift/reduce
State 82 conflicts: 7 shift/reduce
State 83 conflicts: 7 shift/reduce
State 84 conflicts: 7 shift/reduce
State 85 conflicts: 7 shift/reduce
State 89 conflicts: 1 shift/reduce, 1 reduce/reduce
State 92 conflicts: 1 shift/reduce
State 93 conflicts: 7 shift/reduce
State 94 conflicts: 7 shift/reduce
State 95 conflicts: 7 shift/reduce
State 96 conflicts: 7 shift/reduce
State 97 conflicts: 7 shift/reduce
State 98 conflicts: 10 shift/reduce
State 105 conflicts: 1 shift/reduce
State 106 conflicts: 34 reduce/reduce
State 119 conflicts: 7 shift/reduce
State 120 conflicts: 3 shift/reduce
State 121 conflicts: 1 shift/reduce
State 122 conflicts: 1 shift/reduce
State 123 conflicts: 1 shift/reduce
State 124 conflicts: 1 shift/reduce
State 125 conflicts: 1 shift/reduce
State 126 conflicts: 1 shift/reduce
State 127 conflicts: 1 shift/reduce
State 128 conflicts: 1 shift/reduce
State 129 conflicts: 1 shift/reduce
State 134 conflicts: 1 shift/reduce
State 137 conflicts: 2 shift/reduce
State 140 conflicts: 1 shift/reduce
State 141 conflicts: 1 shift/reduce
State 142 conflicts: 1 shift/reduce
State 143 conflicts: 1 shift/reduce
State 144 conflicts: 1 shift/reduce
State 145 conflicts: 1 shift/reduce
State 147 conflicts: 1 shift/reduce
State 149 conflicts: 1 shift/reduce
State 161 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: statements

    2 statements: statement
    3           | statements statement

    4 statement: SEMICOLON
    5          | instruction
    6          | if_else
    7          | while
    8          | block
    9          | for
   10          | return

   11 instruction: declaration SEMICOLON
   12            | printf SEMICOLON
   13            | scanf SEMICOLON
   14            | assign SEMICOLON
   15            | bool_statment SEMICOLON
   16            | fucntion_declaration

   17 declaration: T IDENTIFIER LOP_ASSIGN expr
   18            | T IDENTIFIERS

   19 block: LBRACE statements RBRACE

   20 fucntion_declaration: T IDENTIFIER expr block

   21 IDENTIFIERS: IDENTIFIER
   22            | IDENTIFIERS COMMA IDENTIFIER

   23 assign: IDENTIFIER LOP_ASSIGN expr
   24       | IDENTIFIER LOP_ASSIGN assign
   25       | IDENTIFIER ADDSELF expr
   26       | IDENTIFIER MINUSSELF expr
   27       | IDENTIFIER ADDADD
   28       | IDENTIFIER MINUSMINUS

   29 expr: %empty
   30     | MINUS expr
   31     | expr ADD expr
   32     | expr MINUS expr
   33     | expr COMMA expr
   34     | LPAREN expr RPAREN
   35     | LPAREN RPAREN
   36     | pri_expr

   37 pri_expr: IDENTIFIER
   38         | LPAREN pri_expr RPAREN
   39         | pri_expr MULT pri_expr
   40         | pri_expr DIV pri_expr
   41         | pri_expr MOD pri_expr
   42         | REFERENCE IDENTIFIER
   43         | INTEGER
   44         | CHAR
   45         | STRING
   46         | LPAREN expr RPAREN
   47         | MINUS pri_expr

   48 T: T_INT
   49  | T_CHAR
   50  | T_BOOL
   51  | T_STRING
   52  | T_VOID

   53 if_else: IF bool_statment statement
   54        | IF bool_statment statement ELSE statement

   55 while: WHILE bool_statment block

   56 for: FOR LPAREN instruction instruction assign RPAREN statement

   57 return: RETURN SEMICOLON
   58       | RETURN expr SEMICOLON
   59       | RETURN bool_statment SEMICOLON

   60 bool_statment: LPAREN bool_statment RPAREN
   61              | bool_expr
   62              | andbool_expr
   63              | bool_statment OR bool_expr
   64              | bool_statment OR andbool_expr

   65 andbool_expr: LPAREN andbool_expr RPAREN
   66             | bool_expr AND bool_expr

   67 bool_expr: TRUE
   68          | FALSE
   69          | LPAREN bool_expr RPAREN
   70          | expr EQUAL expr
   71          | not_bool_expr
   72          | expr NOTEQUAL expr
   73          | expr GREATER expr
   74          | expr SMALLER expr
   75          | expr GORE expr
   76          | expr SORE expr
   77          | bool_expr GREATER expr
   78          | bool_expr SMALLER expr
   79          | bool_expr GORE expr
   80          | bool_expr SORE expr
   81          | bool_expr AND expr
   82          | bool_expr EQUAL expr

   83 not_bool_expr: LPAREN not_bool_expr RPAREN
   84              | NOT bool_expr

   85 printf: PRINTF expr

   86 scanf: SCANF expr


Terminals, with rules where they appear

$end (0) 0
error (256)
IF (258) 53 54
ELSE (259) 54
WHILE (260) 55
RETURN (261) 57 58 59
FOR (262) 56
T_CHAR (263) 49
T_INT (264) 48
T_STRING (265) 51
T_BOOL (266) 50
T_VOID (267) 52
LOP_ASSIGN (268) 17 23 24
ADDSELF (269) 25
MINUSSELF (270) 26
SEMICOLON (271) 4 11 12 13 14 15 57 58 59
LPAREN (272) 34 35 38 46 56 60 65 69 83
RPAREN (273) 34 35 38 46 56 60 65 69 83
LBRACE (274) 19
RBRACE (275) 19
COMMA (276) 22 33
IDENTIFIER (277) 17 20 21 22 23 24 25 26 27 28 37 42
INTEGER (278) 43
CHAR (279) 44
BOOL (280)
STRING (281) 45
TRUE (282) 67
FALSE (283) 68
ADD (284) 31
MINUS (285) 30 32 47
MULT (286) 39
DIV (287) 40
MOD (288) 41
ADDADD (289) 27
MINUSMINUS (290) 28
EQUAL (291) 70 82
NOT (292) 84
NOTEQUAL (293) 72
GREATER (294) 73 77
SMALLER (295) 74 78
GORE (296) 75 79
SORE (297) 76 80
OR (298) 63 64
AND (299) 66 81
PRINTF (300) 85
SCANF (301) 86
REFERENCE (302) 42
POINTER (303)
LOWER_THEN_ELSE (304)
UMINUS (305)


Nonterminals, with rules where they appear

$accept (51)
    on left: 0
program (52)
    on left: 1, on right: 0
statements (53)
    on left: 2 3, on right: 1 3 19
statement (54)
    on left: 4 5 6 7 8 9 10, on right: 2 3 53 54 56
instruction (55)
    on left: 11 12 13 14 15 16, on right: 5 56
declaration (56)
    on left: 17 18, on right: 11
block (57)
    on left: 19, on right: 8 20 55
fucntion_declaration (58)
    on left: 20, on right: 16
IDENTIFIERS (59)
    on left: 21 22, on right: 18 22
assign (60)
    on left: 23 24 25 26 27 28, on right: 14 24 56
expr (61)
    on left: 29 30 31 32 33 34 35 36, on right: 17 20 23 25 26 30 31
    32 33 34 46 58 70 72 73 74 75 76 77 78 79 80 81 82 85 86
pri_expr (62)
    on left: 37 38 39 40 41 42 43 44 45 46 47, on right: 36 38 39 40
    41 47
T (63)
    on left: 48 49 50 51 52, on right: 17 18 20
if_else (64)
    on left: 53 54, on right: 6
while (65)
    on left: 55, on right: 7
for (66)
    on left: 56, on right: 9
return (67)
    on left: 57 58 59, on right: 10
bool_statment (68)
    on left: 60 61 62 63 64, on right: 15 53 54 55 59 60 63 64
andbool_expr (69)
    on left: 65 66, on right: 62 64 65
bool_expr (70)
    on left: 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82, on right:
    61 63 66 69 77 78 79 80 81 82 84
not_bool_expr (71)
    on left: 83 84, on right: 71 83
printf (72)
    on left: 85, on right: 12
scanf (73)
    on left: 86, on right: 13


State 0

    0 $accept: . program $end

    IF          shift, and go to state 1
    WHILE       shift, and go to state 2
    RETURN      shift, and go to state 3
    FOR         shift, and go to state 4
    T_CHAR      shift, and go to state 5
    T_INT       shift, and go to state 6
    T_STRING    shift, and go to state 7
    T_BOOL      shift, and go to state 8
    T_VOID      shift, and go to state 9
    SEMICOLON   shift, and go to state 10
    LPAREN      shift, and go to state 11
    LBRACE      shift, and go to state 12
    IDENTIFIER  shift, and go to state 13
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    TRUE        shift, and go to state 17
    FALSE       shift, and go to state 18
    MINUS       shift, and go to state 19
    NOT         shift, and go to state 20
    PRINTF      shift, and go to state 21
    SCANF       shift, and go to state 22
    REFERENCE   shift, and go to state 23

    MINUS     [reduce using rule 29 (expr)]
    $default  reduce using rule 29 (expr)

    program               go to state 24
    statements            go to state 25
    statement             go to state 26
    instruction           go to state 27
    declaration           go to state 28
    block                 go to state 29
    fucntion_declaration  go to state 30
    assign                go to state 31
    expr                  go to state 32
    pri_expr              go to state 33
    T                     go to state 34
    if_else               go to state 35
    while                 go to state 36
    for                   go to state 37
    return                go to state 38
    bool_statment         go to state 39
    andbool_expr          go to state 40
    bool_expr             go to state 41
    not_bool_expr         go to state 42
    printf                go to state 43
    scanf                 go to state 44


State 1

   53 if_else: IF . bool_statment statement
   54        | IF . bool_statment statement ELSE statement

    LPAREN      shift, and go to state 11
    IDENTIFIER  shift, and go to state 45
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    TRUE        shift, and go to state 17
    FALSE       shift, and go to state 18
    MINUS       shift, and go to state 19
    NOT         shift, and go to state 20
    REFERENCE   shift, and go to state 23

    MINUS     [reduce using rule 29 (expr)]
    $default  reduce using rule 29 (expr)

    expr           go to state 32
    pri_expr       go to state 33
    bool_statment  go to state 46
    andbool_expr   go to state 40
    bool_expr      go to state 41
    not_bool_expr  go to state 42


State 2

   55 while: WHILE . bool_statment block

    LPAREN      shift, and go to state 11
    IDENTIFIER  shift, and go to state 45
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    TRUE        shift, and go to state 17
    FALSE       shift, and go to state 18
    MINUS       shift, and go to state 19
    NOT         shift, and go to state 20
    REFERENCE   shift, and go to state 23

    MINUS     [reduce using rule 29 (expr)]
    $default  reduce using rule 29 (expr)

    expr           go to state 32
    pri_expr       go to state 33
    bool_statment  go to state 47
    andbool_expr   go to state 40
    bool_expr      go to state 41
    not_bool_expr  go to state 42


State 3

   57 return: RETURN . SEMICOLON
   58       | RETURN . expr SEMICOLON
   59       | RETURN . bool_statment SEMICOLON

    SEMICOLON   shift, and go to state 48
    LPAREN      shift, and go to state 11
    IDENTIFIER  shift, and go to state 45
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    TRUE        shift, and go to state 17
    FALSE       shift, and go to state 18
    MINUS       shift, and go to state 19
    NOT         shift, and go to state 20
    REFERENCE   shift, and go to state 23

    SEMICOLON  [reduce using rule 29 (expr)]
    MINUS      [reduce using rule 29 (expr)]
    $default   reduce using rule 29 (expr)

    expr           go to state 49
    pri_expr       go to state 33
    bool_statment  go to state 50
    andbool_expr   go to state 40
    bool_expr      go to state 41
    not_bool_expr  go to state 42


State 4

   56 for: FOR . LPAREN instruction instruction assign RPAREN statement

    LPAREN  shift, and go to state 51


State 5

   49 T: T_CHAR .

    $default  reduce using rule 49 (T)


State 6

   48 T: T_INT .

    $default  reduce using rule 48 (T)


State 7

   51 T: T_STRING .

    $default  reduce using rule 51 (T)


State 8

   50 T: T_BOOL .

    $default  reduce using rule 50 (T)


State 9

   52 T: T_VOID .

    $default  reduce using rule 52 (T)


State 10

    4 statement: SEMICOLON .

    $default  reduce using rule 4 (statement)


State 11

   34 expr: LPAREN . expr RPAREN
   35     | LPAREN . RPAREN
   38 pri_expr: LPAREN . pri_expr RPAREN
   46         | LPAREN . expr RPAREN
   60 bool_statment: LPAREN . bool_statment RPAREN
   65 andbool_expr: LPAREN . andbool_expr RPAREN
   69 bool_expr: LPAREN . bool_expr RPAREN
   83 not_bool_expr: LPAREN . not_bool_expr RPAREN

    LPAREN      shift, and go to state 11
    RPAREN      shift, and go to state 52
    IDENTIFIER  shift, and go to state 45
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    TRUE        shift, and go to state 17
    FALSE       shift, and go to state 18
    MINUS       shift, and go to state 19
    NOT         shift, and go to state 20
    REFERENCE   shift, and go to state 23

    RPAREN    [reduce using rule 29 (expr)]
    MINUS     [reduce using rule 29 (expr)]
    $default  reduce using rule 29 (expr)

    expr           go to state 53
    pri_expr       go to state 54
    bool_statment  go to state 55
    andbool_expr   go to state 56
    bool_expr      go to state 57
    not_bool_expr  go to state 58


State 12

   19 block: LBRACE . statements RBRACE

    IF          shift, and go to state 1
    WHILE       shift, and go to state 2
    RETURN      shift, and go to state 3
    FOR         shift, and go to state 4
    T_CHAR      shift, and go to state 5
    T_INT       shift, and go to state 6
    T_STRING    shift, and go to state 7
    T_BOOL      shift, and go to state 8
    T_VOID      shift, and go to state 9
    SEMICOLON   shift, and go to state 10
    LPAREN      shift, and go to state 11
    LBRACE      shift, and go to state 12
    IDENTIFIER  shift, and go to state 13
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    TRUE        shift, and go to state 17
    FALSE       shift, and go to state 18
    MINUS       shift, and go to state 19
    NOT         shift, and go to state 20
    PRINTF      shift, and go to state 21
    SCANF       shift, and go to state 22
    REFERENCE   shift, and go to state 23

    MINUS     [reduce using rule 29 (expr)]
    $default  reduce using rule 29 (expr)

    statements            go to state 59
    statement             go to state 26
    instruction           go to state 27
    declaration           go to state 28
    block                 go to state 29
    fucntion_declaration  go to state 30
    assign                go to state 31
    expr                  go to state 32
    pri_expr              go to state 33
    T                     go to state 34
    if_else               go to state 35
    while                 go to state 36
    for                   go to state 37
    return                go to state 38
    bool_statment         go to state 39
    andbool_expr          go to state 40
    bool_expr             go to state 41
    not_bool_expr         go to state 42
    printf                go to state 43
    scanf                 go to state 44


State 13

   23 assign: IDENTIFIER . LOP_ASSIGN expr
   24       | IDENTIFIER . LOP_ASSIGN assign
   25       | IDENTIFIER . ADDSELF expr
   26       | IDENTIFIER . MINUSSELF expr
   27       | IDENTIFIER . ADDADD
   28       | IDENTIFIER . MINUSMINUS
   37 pri_expr: IDENTIFIER .

    LOP_ASSIGN  shift, and go to state 60
    ADDSELF     shift, and go to state 61
    MINUSSELF   shift, and go to state 62
    ADDADD      shift, and go to state 63
    MINUSMINUS  shift, and go to state 64

    $default  reduce using rule 37 (pri_expr)


State 14

   43 pri_expr: INTEGER .

    $default  reduce using rule 43 (pri_expr)


State 15

   44 pri_expr: CHAR .

    $default  reduce using rule 44 (pri_expr)


State 16

   45 pri_expr: STRING .

    $default  reduce using rule 45 (pri_expr)


State 17

   67 bool_expr: TRUE .

    $default  reduce using rule 67 (bool_expr)


State 18

   68 bool_expr: FALSE .

    $default  reduce using rule 68 (bool_expr)


State 19

   30 expr: MINUS . expr
   47 pri_expr: MINUS . pri_expr

    LPAREN      shift, and go to state 65
    IDENTIFIER  shift, and go to state 45
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    MINUS       shift, and go to state 19
    REFERENCE   shift, and go to state 23

    LPAREN      [reduce using rule 29 (expr)]
    IDENTIFIER  [reduce using rule 29 (expr)]
    INTEGER     [reduce using rule 29 (expr)]
    CHAR        [reduce using rule 29 (expr)]
    STRING      [reduce using rule 29 (expr)]
    MINUS       [reduce using rule 29 (expr)]
    REFERENCE   [reduce using rule 29 (expr)]
    $default    reduce using rule 29 (expr)

    expr      go to state 66
    pri_expr  go to state 67


State 20

   84 not_bool_expr: NOT . bool_expr

    LPAREN      shift, and go to state 68
    IDENTIFIER  shift, and go to state 45
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    TRUE        shift, and go to state 17
    FALSE       shift, and go to state 18
    MINUS       shift, and go to state 19
    NOT         shift, and go to state 20
    REFERENCE   shift, and go to state 23

    MINUS     [reduce using rule 29 (expr)]
    $default  reduce using rule 29 (expr)

    expr           go to state 32
    pri_expr       go to state 33
    bool_expr      go to state 69
    not_bool_expr  go to state 42


State 21

   85 printf: PRINTF . expr

    LPAREN      shift, and go to state 65
    IDENTIFIER  shift, and go to state 45
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    MINUS       shift, and go to state 19
    REFERENCE   shift, and go to state 23

    MINUS     [reduce using rule 29 (expr)]
    $default  reduce using rule 29 (expr)

    expr      go to state 70
    pri_expr  go to state 33


State 22

   86 scanf: SCANF . expr

    LPAREN      shift, and go to state 65
    IDENTIFIER  shift, and go to state 45
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    MINUS       shift, and go to state 19
    REFERENCE   shift, and go to state 23

    MINUS     [reduce using rule 29 (expr)]
    $default  reduce using rule 29 (expr)

    expr      go to state 71
    pri_expr  go to state 33


State 23

   42 pri_expr: REFERENCE . IDENTIFIER

    IDENTIFIER  shift, and go to state 72


State 24

    0 $accept: program . $end

    $end  shift, and go to state 73


State 25

    1 program: statements .
    3 statements: statements . statement

    IF          shift, and go to state 1
    WHILE       shift, and go to state 2
    RETURN      shift, and go to state 3
    FOR         shift, and go to state 4
    T_CHAR      shift, and go to state 5
    T_INT       shift, and go to state 6
    T_STRING    shift, and go to state 7
    T_BOOL      shift, and go to state 8
    T_VOID      shift, and go to state 9
    SEMICOLON   shift, and go to state 10
    LPAREN      shift, and go to state 11
    LBRACE      shift, and go to state 12
    IDENTIFIER  shift, and go to state 13
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    TRUE        shift, and go to state 17
    FALSE       shift, and go to state 18
    MINUS       shift, and go to state 19
    NOT         shift, and go to state 20
    PRINTF      shift, and go to state 21
    SCANF       shift, and go to state 22
    REFERENCE   shift, and go to state 23

    $end      reduce using rule 1 (program)
    MINUS     [reduce using rule 29 (expr)]
    $default  reduce using rule 29 (expr)

    statement             go to state 74
    instruction           go to state 27
    declaration           go to state 28
    block                 go to state 29
    fucntion_declaration  go to state 30
    assign                go to state 31
    expr                  go to state 32
    pri_expr              go to state 33
    T                     go to state 34
    if_else               go to state 35
    while                 go to state 36
    for                   go to state 37
    return                go to state 38
    bool_statment         go to state 39
    andbool_expr          go to state 40
    bool_expr             go to state 41
    not_bool_expr         go to state 42
    printf                go to state 43
    scanf                 go to state 44


State 26

    2 statements: statement .

    $default  reduce using rule 2 (statements)


State 27

    5 statement: instruction .

    $default  reduce using rule 5 (statement)


State 28

   11 instruction: declaration . SEMICOLON

    SEMICOLON  shift, and go to state 75


State 29

    8 statement: block .

    $default  reduce using rule 8 (statement)


State 30

   16 instruction: fucntion_declaration .

    $default  reduce using rule 16 (instruction)


State 31

   14 instruction: assign . SEMICOLON

    SEMICOLON  shift, and go to state 76


State 32

   31 expr: expr . ADD expr
   32     | expr . MINUS expr
   33     | expr . COMMA expr
   70 bool_expr: expr . EQUAL expr
   72          | expr . NOTEQUAL expr
   73          | expr . GREATER expr
   74          | expr . SMALLER expr
   75          | expr . GORE expr
   76          | expr . SORE expr

    COMMA     shift, and go to state 77
    ADD       shift, and go to state 78
    MINUS     shift, and go to state 79
    EQUAL     shift, and go to state 80
    NOTEQUAL  shift, and go to state 81
    GREATER   shift, and go to state 82
    SMALLER   shift, and go to state 83
    GORE      shift, and go to state 84
    SORE      shift, and go to state 85


State 33

   36 expr: pri_expr .
   39 pri_expr: pri_expr . MULT pri_expr
   40         | pri_expr . DIV pri_expr
   41         | pri_expr . MOD pri_expr

    MULT  shift, and go to state 86
    DIV   shift, and go to state 87
    MOD   shift, and go to state 88

    $default  reduce using rule 36 (expr)


State 34

   17 declaration: T . IDENTIFIER LOP_ASSIGN expr
   18            | T . IDENTIFIERS
   20 fucntion_declaration: T . IDENTIFIER expr block

    IDENTIFIER  shift, and go to state 89

    IDENTIFIERS  go to state 90


State 35

    6 statement: if_else .

    $default  reduce using rule 6 (statement)


State 36

    7 statement: while .

    $default  reduce using rule 7 (statement)


State 37

    9 statement: for .

    $default  reduce using rule 9 (statement)


State 38

   10 statement: return .

    $default  reduce using rule 10 (statement)


State 39

   15 instruction: bool_statment . SEMICOLON
   63 bool_statment: bool_statment . OR bool_expr
   64              | bool_statment . OR andbool_expr

    SEMICOLON  shift, and go to state 91
    OR         shift, and go to state 92


State 40

   62 bool_statment: andbool_expr .

    $default  reduce using rule 62 (bool_statment)


State 41

   61 bool_statment: bool_expr .
   66 andbool_expr: bool_expr . AND bool_expr
   77 bool_expr: bool_expr . GREATER expr
   78          | bool_expr . SMALLER expr
   79          | bool_expr . GORE expr
   80          | bool_expr . SORE expr
   81          | bool_expr . AND expr
   82          | bool_expr . EQUAL expr

    EQUAL    shift, and go to state 93
    GREATER  shift, and go to state 94
    SMALLER  shift, and go to state 95
    GORE     shift, and go to state 96
    SORE     shift, and go to state 97
    AND      shift, and go to state 98

    EQUAL     [reduce using rule 61 (bool_statment)]
    GREATER   [reduce using rule 61 (bool_statment)]
    SMALLER   [reduce using rule 61 (bool_statment)]
    GORE      [reduce using rule 61 (bool_statment)]
    SORE      [reduce using rule 61 (bool_statment)]
    $default  reduce using rule 61 (bool_statment)


State 42

   71 bool_expr: not_bool_expr .

    $default  reduce using rule 71 (bool_expr)


State 43

   12 instruction: printf . SEMICOLON

    SEMICOLON  shift, and go to state 99


State 44

   13 instruction: scanf . SEMICOLON

    SEMICOLON  shift, and go to state 100


State 45

   37 pri_expr: IDENTIFIER .

    $default  reduce using rule 37 (pri_expr)


State 46

   53 if_else: IF bool_statment . statement
   54        | IF bool_statment . statement ELSE statement
   63 bool_statment: bool_statment . OR bool_expr
   64              | bool_statment . OR andbool_expr

    IF          shift, and go to state 1
    WHILE       shift, and go to state 2
    RETURN      shift, and go to state 3
    FOR         shift, and go to state 4
    T_CHAR      shift, and go to state 5
    T_INT       shift, and go to state 6
    T_STRING    shift, and go to state 7
    T_BOOL      shift, and go to state 8
    T_VOID      shift, and go to state 9
    SEMICOLON   shift, and go to state 10
    LPAREN      shift, and go to state 11
    LBRACE      shift, and go to state 12
    IDENTIFIER  shift, and go to state 13
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    TRUE        shift, and go to state 17
    FALSE       shift, and go to state 18
    MINUS       shift, and go to state 19
    NOT         shift, and go to state 20
    OR          shift, and go to state 92
    PRINTF      shift, and go to state 21
    SCANF       shift, and go to state 22
    REFERENCE   shift, and go to state 23

    MINUS     [reduce using rule 29 (expr)]
    $default  reduce using rule 29 (expr)

    statement             go to state 101
    instruction           go to state 27
    declaration           go to state 28
    block                 go to state 29
    fucntion_declaration  go to state 30
    assign                go to state 31
    expr                  go to state 32
    pri_expr              go to state 33
    T                     go to state 34
    if_else               go to state 35
    while                 go to state 36
    for                   go to state 37
    return                go to state 38
    bool_statment         go to state 39
    andbool_expr          go to state 40
    bool_expr             go to state 41
    not_bool_expr         go to state 42
    printf                go to state 43
    scanf                 go to state 44


State 47

   55 while: WHILE bool_statment . block
   63 bool_statment: bool_statment . OR bool_expr
   64              | bool_statment . OR andbool_expr

    LBRACE  shift, and go to state 12
    OR      shift, and go to state 92

    block  go to state 102


State 48

   57 return: RETURN SEMICOLON .

    $default  reduce using rule 57 (return)


State 49

   31 expr: expr . ADD expr
   32     | expr . MINUS expr
   33     | expr . COMMA expr
   58 return: RETURN expr . SEMICOLON
   70 bool_expr: expr . EQUAL expr
   72          | expr . NOTEQUAL expr
   73          | expr . GREATER expr
   74          | expr . SMALLER expr
   75          | expr . GORE expr
   76          | expr . SORE expr

    SEMICOLON  shift, and go to state 103
    COMMA      shift, and go to state 77
    ADD        shift, and go to state 78
    MINUS      shift, and go to state 79
    EQUAL      shift, and go to state 80
    NOTEQUAL   shift, and go to state 81
    GREATER    shift, and go to state 82
    SMALLER    shift, and go to state 83
    GORE       shift, and go to state 84
    SORE       shift, and go to state 85


State 50

   59 return: RETURN bool_statment . SEMICOLON
   63 bool_statment: bool_statment . OR bool_expr
   64              | bool_statment . OR andbool_expr

    SEMICOLON  shift, and go to state 104
    OR         shift, and go to state 92


State 51

   56 for: FOR LPAREN . instruction instruction assign RPAREN statement

    T_CHAR      shift, and go to state 5
    T_INT       shift, and go to state 6
    T_STRING    shift, and go to state 7
    T_BOOL      shift, and go to state 8
    T_VOID      shift, and go to state 9
    LPAREN      shift, and go to state 11
    IDENTIFIER  shift, and go to state 13
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    TRUE        shift, and go to state 17
    FALSE       shift, and go to state 18
    MINUS       shift, and go to state 19
    NOT         shift, and go to state 20
    PRINTF      shift, and go to state 21
    SCANF       shift, and go to state 22
    REFERENCE   shift, and go to state 23

    MINUS     [reduce using rule 29 (expr)]
    $default  reduce using rule 29 (expr)

    instruction           go to state 105
    declaration           go to state 28
    fucntion_declaration  go to state 30
    assign                go to state 31
    expr                  go to state 32
    pri_expr              go to state 33
    T                     go to state 34
    bool_statment         go to state 39
    andbool_expr          go to state 40
    bool_expr             go to state 41
    not_bool_expr         go to state 42
    printf                go to state 43
    scanf                 go to state 44


State 52

   35 expr: LPAREN RPAREN .

    $default  reduce using rule 35 (expr)


State 53

   31 expr: expr . ADD expr
   32     | expr . MINUS expr
   33     | expr . COMMA expr
   34     | LPAREN expr . RPAREN
   46 pri_expr: LPAREN expr . RPAREN
   70 bool_expr: expr . EQUAL expr
   72          | expr . NOTEQUAL expr
   73          | expr . GREATER expr
   74          | expr . SMALLER expr
   75          | expr . GORE expr
   76          | expr . SORE expr

    RPAREN    shift, and go to state 106
    COMMA     shift, and go to state 77
    ADD       shift, and go to state 78
    MINUS     shift, and go to state 79
    EQUAL     shift, and go to state 80
    NOTEQUAL  shift, and go to state 81
    GREATER   shift, and go to state 82
    SMALLER   shift, and go to state 83
    GORE      shift, and go to state 84
    SORE      shift, and go to state 85


State 54

   36 expr: pri_expr .
   38 pri_expr: LPAREN pri_expr . RPAREN
   39         | pri_expr . MULT pri_expr
   40         | pri_expr . DIV pri_expr
   41         | pri_expr . MOD pri_expr

    RPAREN  shift, and go to state 107
    MULT    shift, and go to state 86
    DIV     shift, and go to state 87
    MOD     shift, and go to state 88

    RPAREN    [reduce using rule 36 (expr)]
    $default  reduce using rule 36 (expr)


State 55

   60 bool_statment: LPAREN bool_statment . RPAREN
   63              | bool_statment . OR bool_expr
   64              | bool_statment . OR andbool_expr

    RPAREN  shift, and go to state 108
    OR      shift, and go to state 92


State 56

   62 bool_statment: andbool_expr .
   65 andbool_expr: LPAREN andbool_expr . RPAREN

    RPAREN  shift, and go to state 109

    RPAREN    [reduce using rule 62 (bool_statment)]
    $default  reduce using rule 62 (bool_statment)


State 57

   61 bool_statment: bool_expr .
   66 andbool_expr: bool_expr . AND bool_expr
   69 bool_expr: LPAREN bool_expr . RPAREN
   77          | bool_expr . GREATER expr
   78          | bool_expr . SMALLER expr
   79          | bool_expr . GORE expr
   80          | bool_expr . SORE expr
   81          | bool_expr . AND expr
   82          | bool_expr . EQUAL expr

    RPAREN   shift, and go to state 110
    EQUAL    shift, and go to state 93
    GREATER  shift, and go to state 94
    SMALLER  shift, and go to state 95
    GORE     shift, and go to state 96
    SORE     shift, and go to state 97
    AND      shift, and go to state 98

    RPAREN    [reduce using rule 61 (bool_statment)]
    $default  reduce using rule 61 (bool_statment)


State 58

   71 bool_expr: not_bool_expr .
   83 not_bool_expr: LPAREN not_bool_expr . RPAREN

    RPAREN  shift, and go to state 111

    RPAREN    [reduce using rule 71 (bool_expr)]
    $default  reduce using rule 71 (bool_expr)


State 59

    3 statements: statements . statement
   19 block: LBRACE statements . RBRACE

    IF          shift, and go to state 1
    WHILE       shift, and go to state 2
    RETURN      shift, and go to state 3
    FOR         shift, and go to state 4
    T_CHAR      shift, and go to state 5
    T_INT       shift, and go to state 6
    T_STRING    shift, and go to state 7
    T_BOOL      shift, and go to state 8
    T_VOID      shift, and go to state 9
    SEMICOLON   shift, and go to state 10
    LPAREN      shift, and go to state 11
    LBRACE      shift, and go to state 12
    RBRACE      shift, and go to state 112
    IDENTIFIER  shift, and go to state 13
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    TRUE        shift, and go to state 17
    FALSE       shift, and go to state 18
    MINUS       shift, and go to state 19
    NOT         shift, and go to state 20
    PRINTF      shift, and go to state 21
    SCANF       shift, and go to state 22
    REFERENCE   shift, and go to state 23

    MINUS     [reduce using rule 29 (expr)]
    $default  reduce using rule 29 (expr)

    statement             go to state 74
    instruction           go to state 27
    declaration           go to state 28
    block                 go to state 29
    fucntion_declaration  go to state 30
    assign                go to state 31
    expr                  go to state 32
    pri_expr              go to state 33
    T                     go to state 34
    if_else               go to state 35
    while                 go to state 36
    for                   go to state 37
    return                go to state 38
    bool_statment         go to state 39
    andbool_expr          go to state 40
    bool_expr             go to state 41
    not_bool_expr         go to state 42
    printf                go to state 43
    scanf                 go to state 44


State 60

   23 assign: IDENTIFIER LOP_ASSIGN . expr
   24       | IDENTIFIER LOP_ASSIGN . assign

    LPAREN      shift, and go to state 65
    IDENTIFIER  shift, and go to state 13
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    MINUS       shift, and go to state 19
    REFERENCE   shift, and go to state 23

    MINUS     [reduce using rule 29 (expr)]
    $default  reduce using rule 29 (expr)

    assign    go to state 113
    expr      go to state 114
    pri_expr  go to state 33


State 61

   25 assign: IDENTIFIER ADDSELF . expr

    LPAREN      shift, and go to state 65
    IDENTIFIER  shift, and go to state 45
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    MINUS       shift, and go to state 19
    REFERENCE   shift, and go to state 23

    MINUS     [reduce using rule 29 (expr)]
    $default  reduce using rule 29 (expr)

    expr      go to state 115
    pri_expr  go to state 33


State 62

   26 assign: IDENTIFIER MINUSSELF . expr

    LPAREN      shift, and go to state 65
    IDENTIFIER  shift, and go to state 45
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    MINUS       shift, and go to state 19
    REFERENCE   shift, and go to state 23

    MINUS     [reduce using rule 29 (expr)]
    $default  reduce using rule 29 (expr)

    expr      go to state 116
    pri_expr  go to state 33


State 63

   27 assign: IDENTIFIER ADDADD .

    $default  reduce using rule 27 (assign)


State 64

   28 assign: IDENTIFIER MINUSMINUS .

    $default  reduce using rule 28 (assign)


State 65

   34 expr: LPAREN . expr RPAREN
   35     | LPAREN . RPAREN
   38 pri_expr: LPAREN . pri_expr RPAREN
   46         | LPAREN . expr RPAREN

    LPAREN      shift, and go to state 65
    RPAREN      shift, and go to state 52
    IDENTIFIER  shift, and go to state 45
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    MINUS       shift, and go to state 19
    REFERENCE   shift, and go to state 23

    RPAREN    [reduce using rule 29 (expr)]
    MINUS     [reduce using rule 29 (expr)]
    $default  reduce using rule 29 (expr)

    expr      go to state 117
    pri_expr  go to state 54


State 66

   30 expr: MINUS expr .
   31     | expr . ADD expr
   32     | expr . MINUS expr
   33     | expr . COMMA expr

    COMMA  shift, and go to state 77

    COMMA     [reduce using rule 30 (expr)]
    $default  reduce using rule 30 (expr)


State 67

   36 expr: pri_expr .
   39 pri_expr: pri_expr . MULT pri_expr
   40         | pri_expr . DIV pri_expr
   41         | pri_expr . MOD pri_expr
   47         | MINUS pri_expr .

    IF          reduce using rule 36 (expr)
    IF          [reduce using rule 47 (pri_expr)]
    WHILE       reduce using rule 36 (expr)
    WHILE       [reduce using rule 47 (pri_expr)]
    RETURN      reduce using rule 36 (expr)
    RETURN      [reduce using rule 47 (pri_expr)]
    FOR         reduce using rule 36 (expr)
    FOR         [reduce using rule 47 (pri_expr)]
    T_CHAR      reduce using rule 36 (expr)
    T_CHAR      [reduce using rule 47 (pri_expr)]
    T_INT       reduce using rule 36 (expr)
    T_INT       [reduce using rule 47 (pri_expr)]
    T_STRING    reduce using rule 36 (expr)
    T_STRING    [reduce using rule 47 (pri_expr)]
    T_BOOL      reduce using rule 36 (expr)
    T_BOOL      [reduce using rule 47 (pri_expr)]
    T_VOID      reduce using rule 36 (expr)
    T_VOID      [reduce using rule 47 (pri_expr)]
    SEMICOLON   reduce using rule 36 (expr)
    SEMICOLON   [reduce using rule 47 (pri_expr)]
    LPAREN      reduce using rule 36 (expr)
    LPAREN      [reduce using rule 47 (pri_expr)]
    RPAREN      reduce using rule 36 (expr)
    RPAREN      [reduce using rule 47 (pri_expr)]
    LBRACE      reduce using rule 36 (expr)
    LBRACE      [reduce using rule 47 (pri_expr)]
    COMMA       reduce using rule 36 (expr)
    COMMA       [reduce using rule 47 (pri_expr)]
    IDENTIFIER  reduce using rule 36 (expr)
    IDENTIFIER  [reduce using rule 47 (pri_expr)]
    INTEGER     reduce using rule 36 (expr)
    INTEGER     [reduce using rule 47 (pri_expr)]
    CHAR        reduce using rule 36 (expr)
    CHAR        [reduce using rule 47 (pri_expr)]
    STRING      reduce using rule 36 (expr)
    STRING      [reduce using rule 47 (pri_expr)]
    TRUE        reduce using rule 36 (expr)
    TRUE        [reduce using rule 47 (pri_expr)]
    FALSE       reduce using rule 36 (expr)
    FALSE       [reduce using rule 47 (pri_expr)]
    ADD         reduce using rule 36 (expr)
    ADD         [reduce using rule 47 (pri_expr)]
    MINUS       reduce using rule 36 (expr)
    MINUS       [reduce using rule 47 (pri_expr)]
    MULT        reduce using rule 47 (pri_expr)
    DIV         reduce using rule 47 (pri_expr)
    MOD         reduce using rule 47 (pri_expr)
    EQUAL       reduce using rule 36 (expr)
    EQUAL       [reduce using rule 47 (pri_expr)]
    NOT         reduce using rule 36 (expr)
    NOT         [reduce using rule 47 (pri_expr)]
    NOTEQUAL    reduce using rule 36 (expr)
    NOTEQUAL    [reduce using rule 47 (pri_expr)]
    GREATER     reduce using rule 36 (expr)
    GREATER     [reduce using rule 47 (pri_expr)]
    SMALLER     reduce using rule 36 (expr)
    SMALLER     [reduce using rule 47 (pri_expr)]
    GORE        reduce using rule 36 (expr)
    GORE        [reduce using rule 47 (pri_expr)]
    SORE        reduce using rule 36 (expr)
    SORE        [reduce using rule 47 (pri_expr)]
    OR          reduce using rule 36 (expr)
    OR          [reduce using rule 47 (pri_expr)]
    AND         reduce using rule 36 (expr)
    AND         [reduce using rule 47 (pri_expr)]
    PRINTF      reduce using rule 36 (expr)
    PRINTF      [reduce using rule 47 (pri_expr)]
    SCANF       reduce using rule 36 (expr)
    SCANF       [reduce using rule 47 (pri_expr)]
    REFERENCE   reduce using rule 36 (expr)
    REFERENCE   [reduce using rule 47 (pri_expr)]
    $default    reduce using rule 36 (expr)


State 68

   34 expr: LPAREN . expr RPAREN
   35     | LPAREN . RPAREN
   38 pri_expr: LPAREN . pri_expr RPAREN
   46         | LPAREN . expr RPAREN
   69 bool_expr: LPAREN . bool_expr RPAREN
   83 not_bool_expr: LPAREN . not_bool_expr RPAREN

    LPAREN      shift, and go to state 68
    RPAREN      shift, and go to state 52
    IDENTIFIER  shift, and go to state 45
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    TRUE        shift, and go to state 17
    FALSE       shift, and go to state 18
    MINUS       shift, and go to state 19
    NOT         shift, and go to state 20
    REFERENCE   shift, and go to state 23

    RPAREN    [reduce using rule 29 (expr)]
    MINUS     [reduce using rule 29 (expr)]
    $default  reduce using rule 29 (expr)

    expr           go to state 53
    pri_expr       go to state 54
    bool_expr      go to state 118
    not_bool_expr  go to state 58


State 69

   77 bool_expr: bool_expr . GREATER expr
   78          | bool_expr . SMALLER expr
   79          | bool_expr . GORE expr
   80          | bool_expr . SORE expr
   81          | bool_expr . AND expr
   82          | bool_expr . EQUAL expr
   84 not_bool_expr: NOT bool_expr .

    $default  reduce using rule 84 (not_bool_expr)


State 70

   31 expr: expr . ADD expr
   32     | expr . MINUS expr
   33     | expr . COMMA expr
   85 printf: PRINTF expr .

    COMMA  shift, and go to state 77
    ADD    shift, and go to state 78
    MINUS  shift, and go to state 79

    $default  reduce using rule 85 (printf)


State 71

   31 expr: expr . ADD expr
   32     | expr . MINUS expr
   33     | expr . COMMA expr
   86 scanf: SCANF expr .

    COMMA  shift, and go to state 77
    ADD    shift, and go to state 78
    MINUS  shift, and go to state 79

    $default  reduce using rule 86 (scanf)


State 72

   42 pri_expr: REFERENCE IDENTIFIER .

    $default  reduce using rule 42 (pri_expr)


State 73

    0 $accept: program $end .

    $default  accept


State 74

    3 statements: statements statement .

    $default  reduce using rule 3 (statements)


State 75

   11 instruction: declaration SEMICOLON .

    $default  reduce using rule 11 (instruction)


State 76

   14 instruction: assign SEMICOLON .

    $default  reduce using rule 14 (instruction)


State 77

   33 expr: expr COMMA . expr

    LPAREN      shift, and go to state 65
    IDENTIFIER  shift, and go to state 45
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    MINUS       shift, and go to state 19
    REFERENCE   shift, and go to state 23

    LPAREN      [reduce using rule 29 (expr)]
    IDENTIFIER  [reduce using rule 29 (expr)]
    INTEGER     [reduce using rule 29 (expr)]
    CHAR        [reduce using rule 29 (expr)]
    STRING      [reduce using rule 29 (expr)]
    MINUS       [reduce using rule 29 (expr)]
    REFERENCE   [reduce using rule 29 (expr)]
    $default    reduce using rule 29 (expr)

    expr      go to state 120
    pri_expr  go to state 33


State 78

   31 expr: expr ADD . expr

    LPAREN      shift, and go to state 65
    IDENTIFIER  shift, and go to state 45
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    MINUS       shift, and go to state 19
    REFERENCE   shift, and go to state 23

    LPAREN      [reduce using rule 29 (expr)]
    IDENTIFIER  [reduce using rule 29 (expr)]
    INTEGER     [reduce using rule 29 (expr)]
    CHAR        [reduce using rule 29 (expr)]
    STRING      [reduce using rule 29 (expr)]
    MINUS       [reduce using rule 29 (expr)]
    REFERENCE   [reduce using rule 29 (expr)]
    $default    reduce using rule 29 (expr)

    expr      go to state 121
    pri_expr  go to state 33


State 79

   32 expr: expr MINUS . expr

    LPAREN      shift, and go to state 65
    IDENTIFIER  shift, and go to state 45
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    MINUS       shift, and go to state 19
    REFERENCE   shift, and go to state 23

    LPAREN      [reduce using rule 29 (expr)]
    IDENTIFIER  [reduce using rule 29 (expr)]
    INTEGER     [reduce using rule 29 (expr)]
    CHAR        [reduce using rule 29 (expr)]
    STRING      [reduce using rule 29 (expr)]
    MINUS       [reduce using rule 29 (expr)]
    REFERENCE   [reduce using rule 29 (expr)]
    $default    reduce using rule 29 (expr)

    expr      go to state 122
    pri_expr  go to state 33


State 80

   70 bool_expr: expr EQUAL . expr

    LPAREN      shift, and go to state 65
    IDENTIFIER  shift, and go to state 45
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    MINUS       shift, and go to state 19
    REFERENCE   shift, and go to state 23

    LPAREN      [reduce using rule 29 (expr)]
    IDENTIFIER  [reduce using rule 29 (expr)]
    INTEGER     [reduce using rule 29 (expr)]
    CHAR        [reduce using rule 29 (expr)]
    STRING      [reduce using rule 29 (expr)]
    MINUS       [reduce using rule 29 (expr)]
    REFERENCE   [reduce using rule 29 (expr)]
    $default    reduce using rule 29 (expr)

    expr      go to state 123
    pri_expr  go to state 33


State 81

   72 bool_expr: expr NOTEQUAL . expr

    LPAREN      shift, and go to state 65
    IDENTIFIER  shift, and go to state 45
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    MINUS       shift, and go to state 19
    REFERENCE   shift, and go to state 23

    LPAREN      [reduce using rule 29 (expr)]
    IDENTIFIER  [reduce using rule 29 (expr)]
    INTEGER     [reduce using rule 29 (expr)]
    CHAR        [reduce using rule 29 (expr)]
    STRING      [reduce using rule 29 (expr)]
    MINUS       [reduce using rule 29 (expr)]
    REFERENCE   [reduce using rule 29 (expr)]
    $default    reduce using rule 29 (expr)

    expr      go to state 124
    pri_expr  go to state 33


State 82

   73 bool_expr: expr GREATER . expr

    LPAREN      shift, and go to state 65
    IDENTIFIER  shift, and go to state 45
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    MINUS       shift, and go to state 19
    REFERENCE   shift, and go to state 23

    LPAREN      [reduce using rule 29 (expr)]
    IDENTIFIER  [reduce using rule 29 (expr)]
    INTEGER     [reduce using rule 29 (expr)]
    CHAR        [reduce using rule 29 (expr)]
    STRING      [reduce using rule 29 (expr)]
    MINUS       [reduce using rule 29 (expr)]
    REFERENCE   [reduce using rule 29 (expr)]
    $default    reduce using rule 29 (expr)

    expr      go to state 125
    pri_expr  go to state 33


State 83

   74 bool_expr: expr SMALLER . expr

    LPAREN      shift, and go to state 65
    IDENTIFIER  shift, and go to state 45
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    MINUS       shift, and go to state 19
    REFERENCE   shift, and go to state 23

    LPAREN      [reduce using rule 29 (expr)]
    IDENTIFIER  [reduce using rule 29 (expr)]
    INTEGER     [reduce using rule 29 (expr)]
    CHAR        [reduce using rule 29 (expr)]
    STRING      [reduce using rule 29 (expr)]
    MINUS       [reduce using rule 29 (expr)]
    REFERENCE   [reduce using rule 29 (expr)]
    $default    reduce using rule 29 (expr)

    expr      go to state 126
    pri_expr  go to state 33


State 84

   75 bool_expr: expr GORE . expr

    LPAREN      shift, and go to state 65
    IDENTIFIER  shift, and go to state 45
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    MINUS       shift, and go to state 19
    REFERENCE   shift, and go to state 23

    LPAREN      [reduce using rule 29 (expr)]
    IDENTIFIER  [reduce using rule 29 (expr)]
    INTEGER     [reduce using rule 29 (expr)]
    CHAR        [reduce using rule 29 (expr)]
    STRING      [reduce using rule 29 (expr)]
    MINUS       [reduce using rule 29 (expr)]
    REFERENCE   [reduce using rule 29 (expr)]
    $default    reduce using rule 29 (expr)

    expr      go to state 127
    pri_expr  go to state 33


State 85

   76 bool_expr: expr SORE . expr

    LPAREN      shift, and go to state 65
    IDENTIFIER  shift, and go to state 45
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    MINUS       shift, and go to state 19
    REFERENCE   shift, and go to state 23

    LPAREN      [reduce using rule 29 (expr)]
    IDENTIFIER  [reduce using rule 29 (expr)]
    INTEGER     [reduce using rule 29 (expr)]
    CHAR        [reduce using rule 29 (expr)]
    STRING      [reduce using rule 29 (expr)]
    MINUS       [reduce using rule 29 (expr)]
    REFERENCE   [reduce using rule 29 (expr)]
    $default    reduce using rule 29 (expr)

    expr      go to state 128
    pri_expr  go to state 33


State 86

   39 pri_expr: pri_expr MULT . pri_expr

    LPAREN      shift, and go to state 129
    IDENTIFIER  shift, and go to state 45
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    MINUS       shift, and go to state 130
    REFERENCE   shift, and go to state 23

    pri_expr  go to state 131


State 87

   40 pri_expr: pri_expr DIV . pri_expr

    LPAREN      shift, and go to state 129
    IDENTIFIER  shift, and go to state 45
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    MINUS       shift, and go to state 130
    REFERENCE   shift, and go to state 23

    pri_expr  go to state 132


State 88

   41 pri_expr: pri_expr MOD . pri_expr

    LPAREN      shift, and go to state 129
    IDENTIFIER  shift, and go to state 45
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    MINUS       shift, and go to state 130
    REFERENCE   shift, and go to state 23

    pri_expr  go to state 133


State 89

   17 declaration: T IDENTIFIER . LOP_ASSIGN expr
   20 fucntion_declaration: T IDENTIFIER . expr block
   21 IDENTIFIERS: IDENTIFIER .

    LOP_ASSIGN  shift, and go to state 134
    LPAREN      shift, and go to state 65
    IDENTIFIER  shift, and go to state 45
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    MINUS       shift, and go to state 19
    REFERENCE   shift, and go to state 23

    LBRACE    reduce using rule 29 (expr)
    COMMA     reduce using rule 21 (IDENTIFIERS)
    COMMA     [reduce using rule 29 (expr)]
    ADD       reduce using rule 29 (expr)
    MINUS     [reduce using rule 29 (expr)]
    $default  reduce using rule 21 (IDENTIFIERS)

    expr      go to state 135
    pri_expr  go to state 33


State 90

   18 declaration: T IDENTIFIERS .
   22 IDENTIFIERS: IDENTIFIERS . COMMA IDENTIFIER

    COMMA  shift, and go to state 136

    $default  reduce using rule 18 (declaration)


State 91

   15 instruction: bool_statment SEMICOLON .

    $default  reduce using rule 15 (instruction)


State 92

   63 bool_statment: bool_statment OR . bool_expr
   64              | bool_statment OR . andbool_expr

    LPAREN      shift, and go to state 137
    IDENTIFIER  shift, and go to state 45
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    TRUE        shift, and go to state 17
    FALSE       shift, and go to state 18
    MINUS       shift, and go to state 19
    NOT         shift, and go to state 20
    REFERENCE   shift, and go to state 23

    MINUS     [reduce using rule 29 (expr)]
    $default  reduce using rule 29 (expr)

    expr           go to state 32
    pri_expr       go to state 33
    andbool_expr   go to state 138
    bool_expr      go to state 139
    not_bool_expr  go to state 42


State 93

   82 bool_expr: bool_expr EQUAL . expr

    LPAREN      shift, and go to state 65
    IDENTIFIER  shift, and go to state 45
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    MINUS       shift, and go to state 19
    REFERENCE   shift, and go to state 23

    LPAREN      [reduce using rule 29 (expr)]
    IDENTIFIER  [reduce using rule 29 (expr)]
    INTEGER     [reduce using rule 29 (expr)]
    CHAR        [reduce using rule 29 (expr)]
    STRING      [reduce using rule 29 (expr)]
    MINUS       [reduce using rule 29 (expr)]
    REFERENCE   [reduce using rule 29 (expr)]
    $default    reduce using rule 29 (expr)

    expr      go to state 140
    pri_expr  go to state 33


State 94

   77 bool_expr: bool_expr GREATER . expr

    LPAREN      shift, and go to state 65
    IDENTIFIER  shift, and go to state 45
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    MINUS       shift, and go to state 19
    REFERENCE   shift, and go to state 23

    LPAREN      [reduce using rule 29 (expr)]
    IDENTIFIER  [reduce using rule 29 (expr)]
    INTEGER     [reduce using rule 29 (expr)]
    CHAR        [reduce using rule 29 (expr)]
    STRING      [reduce using rule 29 (expr)]
    MINUS       [reduce using rule 29 (expr)]
    REFERENCE   [reduce using rule 29 (expr)]
    $default    reduce using rule 29 (expr)

    expr      go to state 141
    pri_expr  go to state 33


State 95

   78 bool_expr: bool_expr SMALLER . expr

    LPAREN      shift, and go to state 65
    IDENTIFIER  shift, and go to state 45
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    MINUS       shift, and go to state 19
    REFERENCE   shift, and go to state 23

    LPAREN      [reduce using rule 29 (expr)]
    IDENTIFIER  [reduce using rule 29 (expr)]
    INTEGER     [reduce using rule 29 (expr)]
    CHAR        [reduce using rule 29 (expr)]
    STRING      [reduce using rule 29 (expr)]
    MINUS       [reduce using rule 29 (expr)]
    REFERENCE   [reduce using rule 29 (expr)]
    $default    reduce using rule 29 (expr)

    expr      go to state 142
    pri_expr  go to state 33


State 96

   79 bool_expr: bool_expr GORE . expr

    LPAREN      shift, and go to state 65
    IDENTIFIER  shift, and go to state 45
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    MINUS       shift, and go to state 19
    REFERENCE   shift, and go to state 23

    LPAREN      [reduce using rule 29 (expr)]
    IDENTIFIER  [reduce using rule 29 (expr)]
    INTEGER     [reduce using rule 29 (expr)]
    CHAR        [reduce using rule 29 (expr)]
    STRING      [reduce using rule 29 (expr)]
    MINUS       [reduce using rule 29 (expr)]
    REFERENCE   [reduce using rule 29 (expr)]
    $default    reduce using rule 29 (expr)

    expr      go to state 143
    pri_expr  go to state 33


State 97

   80 bool_expr: bool_expr SORE . expr

    LPAREN      shift, and go to state 65
    IDENTIFIER  shift, and go to state 45
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    MINUS       shift, and go to state 19
    REFERENCE   shift, and go to state 23

    LPAREN      [reduce using rule 29 (expr)]
    IDENTIFIER  [reduce using rule 29 (expr)]
    INTEGER     [reduce using rule 29 (expr)]
    CHAR        [reduce using rule 29 (expr)]
    STRING      [reduce using rule 29 (expr)]
    MINUS       [reduce using rule 29 (expr)]
    REFERENCE   [reduce using rule 29 (expr)]
    $default    reduce using rule 29 (expr)

    expr      go to state 144
    pri_expr  go to state 33


State 98

   66 andbool_expr: bool_expr AND . bool_expr
   81 bool_expr: bool_expr AND . expr

    LPAREN      shift, and go to state 68
    IDENTIFIER  shift, and go to state 45
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    TRUE        shift, and go to state 17
    FALSE       shift, and go to state 18
    MINUS       shift, and go to state 19
    NOT         shift, and go to state 20
    REFERENCE   shift, and go to state 23

    LPAREN      [reduce using rule 29 (expr)]
    IDENTIFIER  [reduce using rule 29 (expr)]
    INTEGER     [reduce using rule 29 (expr)]
    CHAR        [reduce using rule 29 (expr)]
    STRING      [reduce using rule 29 (expr)]
    TRUE        [reduce using rule 29 (expr)]
    FALSE       [reduce using rule 29 (expr)]
    MINUS       [reduce using rule 29 (expr)]
    NOT         [reduce using rule 29 (expr)]
    REFERENCE   [reduce using rule 29 (expr)]
    $default    reduce using rule 29 (expr)

    expr           go to state 145
    pri_expr       go to state 33
    bool_expr      go to state 146
    not_bool_expr  go to state 42


State 99

   12 instruction: printf SEMICOLON .

    $default  reduce using rule 12 (instruction)


State 100

   13 instruction: scanf SEMICOLON .

    $default  reduce using rule 13 (instruction)


State 101

   53 if_else: IF bool_statment statement .
   54        | IF bool_statment statement . ELSE statement

    ELSE  shift, and go to state 147

    $default  reduce using rule 53 (if_else)


State 102

   55 while: WHILE bool_statment block .

    $default  reduce using rule 55 (while)


State 103

   58 return: RETURN expr SEMICOLON .

    $default  reduce using rule 58 (return)


State 104

   59 return: RETURN bool_statment SEMICOLON .

    $default  reduce using rule 59 (return)


State 105

   56 for: FOR LPAREN instruction . instruction assign RPAREN statement

    T_CHAR      shift, and go to state 5
    T_INT       shift, and go to state 6
    T_STRING    shift, and go to state 7
    T_BOOL      shift, and go to state 8
    T_VOID      shift, and go to state 9
    LPAREN      shift, and go to state 11
    IDENTIFIER  shift, and go to state 13
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    TRUE        shift, and go to state 17
    FALSE       shift, and go to state 18
    MINUS       shift, and go to state 19
    NOT         shift, and go to state 20
    PRINTF      shift, and go to state 21
    SCANF       shift, and go to state 22
    REFERENCE   shift, and go to state 23

    MINUS     [reduce using rule 29 (expr)]
    $default  reduce using rule 29 (expr)

    instruction           go to state 148
    declaration           go to state 28
    fucntion_declaration  go to state 30
    assign                go to state 31
    expr                  go to state 32
    pri_expr              go to state 33
    T                     go to state 34
    bool_statment         go to state 39
    andbool_expr          go to state 40
    bool_expr             go to state 41
    not_bool_expr         go to state 42
    printf                go to state 43
    scanf                 go to state 44


State 106

   34 expr: LPAREN expr RPAREN .
   46 pri_expr: LPAREN expr RPAREN .

    IF          reduce using rule 34 (expr)
    IF          [reduce using rule 46 (pri_expr)]
    WHILE       reduce using rule 34 (expr)
    WHILE       [reduce using rule 46 (pri_expr)]
    RETURN      reduce using rule 34 (expr)
    RETURN      [reduce using rule 46 (pri_expr)]
    FOR         reduce using rule 34 (expr)
    FOR         [reduce using rule 46 (pri_expr)]
    T_CHAR      reduce using rule 34 (expr)
    T_CHAR      [reduce using rule 46 (pri_expr)]
    T_INT       reduce using rule 34 (expr)
    T_INT       [reduce using rule 46 (pri_expr)]
    T_STRING    reduce using rule 34 (expr)
    T_STRING    [reduce using rule 46 (pri_expr)]
    T_BOOL      reduce using rule 34 (expr)
    T_BOOL      [reduce using rule 46 (pri_expr)]
    T_VOID      reduce using rule 34 (expr)
    T_VOID      [reduce using rule 46 (pri_expr)]
    SEMICOLON   reduce using rule 34 (expr)
    SEMICOLON   [reduce using rule 46 (pri_expr)]
    LPAREN      reduce using rule 34 (expr)
    LPAREN      [reduce using rule 46 (pri_expr)]
    RPAREN      reduce using rule 34 (expr)
    RPAREN      [reduce using rule 46 (pri_expr)]
    LBRACE      reduce using rule 34 (expr)
    LBRACE      [reduce using rule 46 (pri_expr)]
    COMMA       reduce using rule 34 (expr)
    COMMA       [reduce using rule 46 (pri_expr)]
    IDENTIFIER  reduce using rule 34 (expr)
    IDENTIFIER  [reduce using rule 46 (pri_expr)]
    INTEGER     reduce using rule 34 (expr)
    INTEGER     [reduce using rule 46 (pri_expr)]
    CHAR        reduce using rule 34 (expr)
    CHAR        [reduce using rule 46 (pri_expr)]
    STRING      reduce using rule 34 (expr)
    STRING      [reduce using rule 46 (pri_expr)]
    TRUE        reduce using rule 34 (expr)
    TRUE        [reduce using rule 46 (pri_expr)]
    FALSE       reduce using rule 34 (expr)
    FALSE       [reduce using rule 46 (pri_expr)]
    ADD         reduce using rule 34 (expr)
    ADD         [reduce using rule 46 (pri_expr)]
    MINUS       reduce using rule 34 (expr)
    MINUS       [reduce using rule 46 (pri_expr)]
    MULT        reduce using rule 46 (pri_expr)
    DIV         reduce using rule 46 (pri_expr)
    MOD         reduce using rule 46 (pri_expr)
    EQUAL       reduce using rule 34 (expr)
    EQUAL       [reduce using rule 46 (pri_expr)]
    NOT         reduce using rule 34 (expr)
    NOT         [reduce using rule 46 (pri_expr)]
    NOTEQUAL    reduce using rule 34 (expr)
    NOTEQUAL    [reduce using rule 46 (pri_expr)]
    GREATER     reduce using rule 34 (expr)
    GREATER     [reduce using rule 46 (pri_expr)]
    SMALLER     reduce using rule 34 (expr)
    SMALLER     [reduce using rule 46 (pri_expr)]
    GORE        reduce using rule 34 (expr)
    GORE        [reduce using rule 46 (pri_expr)]
    SORE        reduce using rule 34 (expr)
    SORE        [reduce using rule 46 (pri_expr)]
    OR          reduce using rule 34 (expr)
    OR          [reduce using rule 46 (pri_expr)]
    AND         reduce using rule 34 (expr)
    AND         [reduce using rule 46 (pri_expr)]
    PRINTF      reduce using rule 34 (expr)
    PRINTF      [reduce using rule 46 (pri_expr)]
    SCANF       reduce using rule 34 (expr)
    SCANF       [reduce using rule 46 (pri_expr)]
    REFERENCE   reduce using rule 34 (expr)
    REFERENCE   [reduce using rule 46 (pri_expr)]
    $default    reduce using rule 34 (expr)


State 107

   38 pri_expr: LPAREN pri_expr RPAREN .

    $default  reduce using rule 38 (pri_expr)


State 108

   60 bool_statment: LPAREN bool_statment RPAREN .

    $default  reduce using rule 60 (bool_statment)


State 109

   65 andbool_expr: LPAREN andbool_expr RPAREN .

    $default  reduce using rule 65 (andbool_expr)


State 110

   69 bool_expr: LPAREN bool_expr RPAREN .

    $default  reduce using rule 69 (bool_expr)


State 111

   83 not_bool_expr: LPAREN not_bool_expr RPAREN .

    $default  reduce using rule 83 (not_bool_expr)


State 112

   19 block: LBRACE statements RBRACE .

    $default  reduce using rule 19 (block)


State 113

   24 assign: IDENTIFIER LOP_ASSIGN assign .

    $default  reduce using rule 24 (assign)


State 114

   23 assign: IDENTIFIER LOP_ASSIGN expr .
   31 expr: expr . ADD expr
   32     | expr . MINUS expr
   33     | expr . COMMA expr

    COMMA  shift, and go to state 77
    ADD    shift, and go to state 78
    MINUS  shift, and go to state 79

    $default  reduce using rule 23 (assign)


State 115

   25 assign: IDENTIFIER ADDSELF expr .
   31 expr: expr . ADD expr
   32     | expr . MINUS expr
   33     | expr . COMMA expr

    COMMA  shift, and go to state 77
    ADD    shift, and go to state 78
    MINUS  shift, and go to state 79

    $default  reduce using rule 25 (assign)


State 116

   26 assign: IDENTIFIER MINUSSELF expr .
   31 expr: expr . ADD expr
   32     | expr . MINUS expr
   33     | expr . COMMA expr

    COMMA  shift, and go to state 77
    ADD    shift, and go to state 78
    MINUS  shift, and go to state 79

    $default  reduce using rule 26 (assign)


State 117

   31 expr: expr . ADD expr
   32     | expr . MINUS expr
   33     | expr . COMMA expr
   34     | LPAREN expr . RPAREN
   46 pri_expr: LPAREN expr . RPAREN

    RPAREN  shift, and go to state 106
    COMMA   shift, and go to state 77
    ADD     shift, and go to state 78
    MINUS   shift, and go to state 79


State 118

   69 bool_expr: LPAREN bool_expr . RPAREN
   77          | bool_expr . GREATER expr
   78          | bool_expr . SMALLER expr
   79          | bool_expr . GORE expr
   80          | bool_expr . SORE expr
   81          | bool_expr . AND expr
   82          | bool_expr . EQUAL expr

    RPAREN   shift, and go to state 110
    EQUAL    shift, and go to state 93
    GREATER  shift, and go to state 94
    SMALLER  shift, and go to state 95
    GORE     shift, and go to state 96
    SORE     shift, and go to state 97
    AND      shift, and go to state 119


State 119

   81 bool_expr: bool_expr AND . expr

    LPAREN      shift, and go to state 65
    IDENTIFIER  shift, and go to state 45
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    MINUS       shift, and go to state 19
    REFERENCE   shift, and go to state 23

    LPAREN      [reduce using rule 29 (expr)]
    IDENTIFIER  [reduce using rule 29 (expr)]
    INTEGER     [reduce using rule 29 (expr)]
    CHAR        [reduce using rule 29 (expr)]
    STRING      [reduce using rule 29 (expr)]
    MINUS       [reduce using rule 29 (expr)]
    REFERENCE   [reduce using rule 29 (expr)]
    $default    reduce using rule 29 (expr)

    expr      go to state 149
    pri_expr  go to state 33


State 120

   31 expr: expr . ADD expr
   32     | expr . MINUS expr
   33     | expr . COMMA expr
   33     | expr COMMA expr .

    COMMA  shift, and go to state 77
    ADD    shift, and go to state 78
    MINUS  shift, and go to state 79

    COMMA     [reduce using rule 33 (expr)]
    ADD       [reduce using rule 33 (expr)]
    MINUS     [reduce using rule 33 (expr)]
    $default  reduce using rule 33 (expr)


State 121

   31 expr: expr . ADD expr
   31     | expr ADD expr .
   32     | expr . MINUS expr
   33     | expr . COMMA expr

    COMMA  shift, and go to state 77

    COMMA     [reduce using rule 31 (expr)]
    $default  reduce using rule 31 (expr)


State 122

   31 expr: expr . ADD expr
   32     | expr . MINUS expr
   32     | expr MINUS expr .
   33     | expr . COMMA expr

    COMMA  shift, and go to state 77

    COMMA     [reduce using rule 32 (expr)]
    $default  reduce using rule 32 (expr)


State 123

   31 expr: expr . ADD expr
   32     | expr . MINUS expr
   33     | expr . COMMA expr
   70 bool_expr: expr EQUAL expr .

    COMMA  shift, and go to state 77

    COMMA     [reduce using rule 70 (bool_expr)]
    $default  reduce using rule 70 (bool_expr)


State 124

   31 expr: expr . ADD expr
   32     | expr . MINUS expr
   33     | expr . COMMA expr
   72 bool_expr: expr NOTEQUAL expr .

    COMMA  shift, and go to state 77

    COMMA     [reduce using rule 72 (bool_expr)]
    $default  reduce using rule 72 (bool_expr)


State 125

   31 expr: expr . ADD expr
   32     | expr . MINUS expr
   33     | expr . COMMA expr
   73 bool_expr: expr GREATER expr .

    COMMA  shift, and go to state 77

    COMMA     [reduce using rule 73 (bool_expr)]
    $default  reduce using rule 73 (bool_expr)


State 126

   31 expr: expr . ADD expr
   32     | expr . MINUS expr
   33     | expr . COMMA expr
   74 bool_expr: expr SMALLER expr .

    COMMA  shift, and go to state 77

    COMMA     [reduce using rule 74 (bool_expr)]
    $default  reduce using rule 74 (bool_expr)


State 127

   31 expr: expr . ADD expr
   32     | expr . MINUS expr
   33     | expr . COMMA expr
   75 bool_expr: expr GORE expr .

    COMMA  shift, and go to state 77

    COMMA     [reduce using rule 75 (bool_expr)]
    $default  reduce using rule 75 (bool_expr)


State 128

   31 expr: expr . ADD expr
   32     | expr . MINUS expr
   33     | expr . COMMA expr
   76 bool_expr: expr SORE expr .

    COMMA  shift, and go to state 77

    COMMA     [reduce using rule 76 (bool_expr)]
    $default  reduce using rule 76 (bool_expr)


State 129

   38 pri_expr: LPAREN . pri_expr RPAREN
   46         | LPAREN . expr RPAREN

    LPAREN      shift, and go to state 65
    IDENTIFIER  shift, and go to state 45
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    MINUS       shift, and go to state 19
    REFERENCE   shift, and go to state 23

    MINUS     [reduce using rule 29 (expr)]
    $default  reduce using rule 29 (expr)

    expr      go to state 150
    pri_expr  go to state 54


State 130

   47 pri_expr: MINUS . pri_expr

    LPAREN      shift, and go to state 129
    IDENTIFIER  shift, and go to state 45
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    MINUS       shift, and go to state 130
    REFERENCE   shift, and go to state 23

    pri_expr  go to state 151


State 131

   39 pri_expr: pri_expr . MULT pri_expr
   39         | pri_expr MULT pri_expr .
   40         | pri_expr . DIV pri_expr
   41         | pri_expr . MOD pri_expr

    $default  reduce using rule 39 (pri_expr)


State 132

   39 pri_expr: pri_expr . MULT pri_expr
   40         | pri_expr . DIV pri_expr
   40         | pri_expr DIV pri_expr .
   41         | pri_expr . MOD pri_expr

    $default  reduce using rule 40 (pri_expr)


State 133

   39 pri_expr: pri_expr . MULT pri_expr
   40         | pri_expr . DIV pri_expr
   41         | pri_expr . MOD pri_expr
   41         | pri_expr MOD pri_expr .

    $default  reduce using rule 41 (pri_expr)


State 134

   17 declaration: T IDENTIFIER LOP_ASSIGN . expr

    LPAREN      shift, and go to state 65
    IDENTIFIER  shift, and go to state 45
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    MINUS       shift, and go to state 19
    REFERENCE   shift, and go to state 23

    MINUS     [reduce using rule 29 (expr)]
    $default  reduce using rule 29 (expr)

    expr      go to state 152
    pri_expr  go to state 33


State 135

   20 fucntion_declaration: T IDENTIFIER expr . block
   31 expr: expr . ADD expr
   32     | expr . MINUS expr
   33     | expr . COMMA expr

    LBRACE  shift, and go to state 12
    COMMA   shift, and go to state 77
    ADD     shift, and go to state 78
    MINUS   shift, and go to state 79

    block  go to state 153


State 136

   22 IDENTIFIERS: IDENTIFIERS COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 154


State 137

   34 expr: LPAREN . expr RPAREN
   35     | LPAREN . RPAREN
   38 pri_expr: LPAREN . pri_expr RPAREN
   46         | LPAREN . expr RPAREN
   65 andbool_expr: LPAREN . andbool_expr RPAREN
   69 bool_expr: LPAREN . bool_expr RPAREN
   83 not_bool_expr: LPAREN . not_bool_expr RPAREN

    LPAREN      shift, and go to state 137
    RPAREN      shift, and go to state 52
    IDENTIFIER  shift, and go to state 45
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    TRUE        shift, and go to state 17
    FALSE       shift, and go to state 18
    MINUS       shift, and go to state 19
    NOT         shift, and go to state 20
    REFERENCE   shift, and go to state 23

    RPAREN    [reduce using rule 29 (expr)]
    MINUS     [reduce using rule 29 (expr)]
    $default  reduce using rule 29 (expr)

    expr           go to state 53
    pri_expr       go to state 54
    andbool_expr   go to state 155
    bool_expr      go to state 156
    not_bool_expr  go to state 58


State 138

   64 bool_statment: bool_statment OR andbool_expr .

    $default  reduce using rule 64 (bool_statment)


State 139

   63 bool_statment: bool_statment OR bool_expr .
   66 andbool_expr: bool_expr . AND bool_expr
   77 bool_expr: bool_expr . GREATER expr
   78          | bool_expr . SMALLER expr
   79          | bool_expr . GORE expr
   80          | bool_expr . SORE expr
   81          | bool_expr . AND expr
   82          | bool_expr . EQUAL expr

    EQUAL    shift, and go to state 93
    GREATER  shift, and go to state 94
    SMALLER  shift, and go to state 95
    GORE     shift, and go to state 96
    SORE     shift, and go to state 97
    AND      shift, and go to state 98

    $default  reduce using rule 63 (bool_statment)


State 140

   31 expr: expr . ADD expr
   32     | expr . MINUS expr
   33     | expr . COMMA expr
   82 bool_expr: bool_expr EQUAL expr .

    COMMA  shift, and go to state 77

    COMMA     [reduce using rule 82 (bool_expr)]
    $default  reduce using rule 82 (bool_expr)


State 141

   31 expr: expr . ADD expr
   32     | expr . MINUS expr
   33     | expr . COMMA expr
   77 bool_expr: bool_expr GREATER expr .

    COMMA  shift, and go to state 77

    COMMA     [reduce using rule 77 (bool_expr)]
    $default  reduce using rule 77 (bool_expr)


State 142

   31 expr: expr . ADD expr
   32     | expr . MINUS expr
   33     | expr . COMMA expr
   78 bool_expr: bool_expr SMALLER expr .

    COMMA  shift, and go to state 77

    COMMA     [reduce using rule 78 (bool_expr)]
    $default  reduce using rule 78 (bool_expr)


State 143

   31 expr: expr . ADD expr
   32     | expr . MINUS expr
   33     | expr . COMMA expr
   79 bool_expr: bool_expr GORE expr .

    COMMA  shift, and go to state 77

    COMMA     [reduce using rule 79 (bool_expr)]
    $default  reduce using rule 79 (bool_expr)


State 144

   31 expr: expr . ADD expr
   32     | expr . MINUS expr
   33     | expr . COMMA expr
   80 bool_expr: bool_expr SORE expr .

    COMMA  shift, and go to state 77

    COMMA     [reduce using rule 80 (bool_expr)]
    $default  reduce using rule 80 (bool_expr)


State 145

   31 expr: expr . ADD expr
   32     | expr . MINUS expr
   33     | expr . COMMA expr
   70 bool_expr: expr . EQUAL expr
   72          | expr . NOTEQUAL expr
   73          | expr . GREATER expr
   74          | expr . SMALLER expr
   75          | expr . GORE expr
   76          | expr . SORE expr
   81          | bool_expr AND expr .

    COMMA     shift, and go to state 77
    ADD       shift, and go to state 78
    MINUS     shift, and go to state 79
    EQUAL     shift, and go to state 80
    NOTEQUAL  shift, and go to state 81
    GREATER   shift, and go to state 82
    SMALLER   shift, and go to state 83
    GORE      shift, and go to state 84
    SORE      shift, and go to state 85

    COMMA     [reduce using rule 81 (bool_expr)]
    $default  reduce using rule 81 (bool_expr)


State 146

   66 andbool_expr: bool_expr AND bool_expr .
   77 bool_expr: bool_expr . GREATER expr
   78          | bool_expr . SMALLER expr
   79          | bool_expr . GORE expr
   80          | bool_expr . SORE expr
   81          | bool_expr . AND expr
   82          | bool_expr . EQUAL expr

    EQUAL    shift, and go to state 93
    GREATER  shift, and go to state 94
    SMALLER  shift, and go to state 95
    GORE     shift, and go to state 96
    SORE     shift, and go to state 97
    AND      shift, and go to state 119

    $default  reduce using rule 66 (andbool_expr)


State 147

   54 if_else: IF bool_statment statement ELSE . statement

    IF          shift, and go to state 1
    WHILE       shift, and go to state 2
    RETURN      shift, and go to state 3
    FOR         shift, and go to state 4
    T_CHAR      shift, and go to state 5
    T_INT       shift, and go to state 6
    T_STRING    shift, and go to state 7
    T_BOOL      shift, and go to state 8
    T_VOID      shift, and go to state 9
    SEMICOLON   shift, and go to state 10
    LPAREN      shift, and go to state 11
    LBRACE      shift, and go to state 12
    IDENTIFIER  shift, and go to state 13
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    TRUE        shift, and go to state 17
    FALSE       shift, and go to state 18
    MINUS       shift, and go to state 19
    NOT         shift, and go to state 20
    PRINTF      shift, and go to state 21
    SCANF       shift, and go to state 22
    REFERENCE   shift, and go to state 23

    MINUS     [reduce using rule 29 (expr)]
    $default  reduce using rule 29 (expr)

    statement             go to state 157
    instruction           go to state 27
    declaration           go to state 28
    block                 go to state 29
    fucntion_declaration  go to state 30
    assign                go to state 31
    expr                  go to state 32
    pri_expr              go to state 33
    T                     go to state 34
    if_else               go to state 35
    while                 go to state 36
    for                   go to state 37
    return                go to state 38
    bool_statment         go to state 39
    andbool_expr          go to state 40
    bool_expr             go to state 41
    not_bool_expr         go to state 42
    printf                go to state 43
    scanf                 go to state 44


State 148

   56 for: FOR LPAREN instruction instruction . assign RPAREN statement

    IDENTIFIER  shift, and go to state 158

    assign  go to state 159


State 149

   31 expr: expr . ADD expr
   32     | expr . MINUS expr
   33     | expr . COMMA expr
   81 bool_expr: bool_expr AND expr .

    COMMA  shift, and go to state 77
    ADD    shift, and go to state 78
    MINUS  shift, and go to state 79

    COMMA     [reduce using rule 81 (bool_expr)]
    $default  reduce using rule 81 (bool_expr)


State 150

   31 expr: expr . ADD expr
   32     | expr . MINUS expr
   33     | expr . COMMA expr
   46 pri_expr: LPAREN expr . RPAREN

    RPAREN  shift, and go to state 160
    COMMA   shift, and go to state 77
    ADD     shift, and go to state 78
    MINUS   shift, and go to state 79


State 151

   39 pri_expr: pri_expr . MULT pri_expr
   40         | pri_expr . DIV pri_expr
   41         | pri_expr . MOD pri_expr
   47         | MINUS pri_expr .

    $default  reduce using rule 47 (pri_expr)


State 152

   17 declaration: T IDENTIFIER LOP_ASSIGN expr .
   31 expr: expr . ADD expr
   32     | expr . MINUS expr
   33     | expr . COMMA expr

    COMMA  shift, and go to state 77
    ADD    shift, and go to state 78
    MINUS  shift, and go to state 79

    $default  reduce using rule 17 (declaration)


State 153

   20 fucntion_declaration: T IDENTIFIER expr block .

    $default  reduce using rule 20 (fucntion_declaration)


State 154

   22 IDENTIFIERS: IDENTIFIERS COMMA IDENTIFIER .

    $default  reduce using rule 22 (IDENTIFIERS)


State 155

   65 andbool_expr: LPAREN andbool_expr . RPAREN

    RPAREN  shift, and go to state 109


State 156

   66 andbool_expr: bool_expr . AND bool_expr
   69 bool_expr: LPAREN bool_expr . RPAREN
   77          | bool_expr . GREATER expr
   78          | bool_expr . SMALLER expr
   79          | bool_expr . GORE expr
   80          | bool_expr . SORE expr
   81          | bool_expr . AND expr
   82          | bool_expr . EQUAL expr

    RPAREN   shift, and go to state 110
    EQUAL    shift, and go to state 93
    GREATER  shift, and go to state 94
    SMALLER  shift, and go to state 95
    GORE     shift, and go to state 96
    SORE     shift, and go to state 97
    AND      shift, and go to state 98


State 157

   54 if_else: IF bool_statment statement ELSE statement .

    $default  reduce using rule 54 (if_else)


State 158

   23 assign: IDENTIFIER . LOP_ASSIGN expr
   24       | IDENTIFIER . LOP_ASSIGN assign
   25       | IDENTIFIER . ADDSELF expr
   26       | IDENTIFIER . MINUSSELF expr
   27       | IDENTIFIER . ADDADD
   28       | IDENTIFIER . MINUSMINUS

    LOP_ASSIGN  shift, and go to state 60
    ADDSELF     shift, and go to state 61
    MINUSSELF   shift, and go to state 62
    ADDADD      shift, and go to state 63
    MINUSMINUS  shift, and go to state 64


State 159

   56 for: FOR LPAREN instruction instruction assign . RPAREN statement

    RPAREN  shift, and go to state 161


State 160

   46 pri_expr: LPAREN expr RPAREN .

    $default  reduce using rule 46 (pri_expr)


State 161

   56 for: FOR LPAREN instruction instruction assign RPAREN . statement

    IF          shift, and go to state 1
    WHILE       shift, and go to state 2
    RETURN      shift, and go to state 3
    FOR         shift, and go to state 4
    T_CHAR      shift, and go to state 5
    T_INT       shift, and go to state 6
    T_STRING    shift, and go to state 7
    T_BOOL      shift, and go to state 8
    T_VOID      shift, and go to state 9
    SEMICOLON   shift, and go to state 10
    LPAREN      shift, and go to state 11
    LBRACE      shift, and go to state 12
    IDENTIFIER  shift, and go to state 13
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    TRUE        shift, and go to state 17
    FALSE       shift, and go to state 18
    MINUS       shift, and go to state 19
    NOT         shift, and go to state 20
    PRINTF      shift, and go to state 21
    SCANF       shift, and go to state 22
    REFERENCE   shift, and go to state 23

    MINUS     [reduce using rule 29 (expr)]
    $default  reduce using rule 29 (expr)

    statement             go to state 162
    instruction           go to state 27
    declaration           go to state 28
    block                 go to state 29
    fucntion_declaration  go to state 30
    assign                go to state 31
    expr                  go to state 32
    pri_expr              go to state 33
    T                     go to state 34
    if_else               go to state 35
    while                 go to state 36
    for                   go to state 37
    return                go to state 38
    bool_statment         go to state 39
    andbool_expr          go to state 40
    bool_expr             go to state 41
    not_bool_expr         go to state 42
    printf                go to state 43
    scanf                 go to state 44


State 162

   56 for: FOR LPAREN instruction instruction assign RPAREN statement .

    $default  reduce using rule 56 (for)
