Terminals unused in grammar

   BOOL
   POINTER


State 31 conflicts: 1 shift/reduce
State 55 conflicts: 1 shift/reduce
State 97 conflicts: 23 shift/reduce
State 109 conflicts: 6 shift/reduce
State 110 conflicts: 1 shift/reduce
State 111 conflicts: 1 shift/reduce
State 112 conflicts: 1 shift/reduce
State 113 conflicts: 1 shift/reduce
State 114 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: statements

    2 statements: statement
    3           | statements statement

    4 statement: SEMICOLON
    5          | instruction
    6          | if_else
    7          | while
    8          | block
    9          | for
   10          | return

   11 instruction: declaration SEMICOLON
   12            | printf SEMICOLON
   13            | scanf SEMICOLON
   14            | assign SEMICOLON
   15            | bool_statment SEMICOLON
   16            | fucntion_declaration

   17 declaration: T IDENTIFIER LOP_ASSIGN expr
   18            | T IDENTIFIERS

   19 block: LBRACE statements RBRACE

   20 fucntion_declaration: T IDENTIFIER expr block

   21 IDENTIFIERS: IDENTIFIER
   22            | IDENTIFIERS COMMA IDENTIFIER

   23 assign: expr LOP_ASSIGN expr
   24       | expr ADDSELF expr
   25       | expr MINUSSELF expr
   26       | expr ADDADD
   27       | expr MINUSMINUS

   28 expr: IDENTIFIERS
   29     | MINUS expr
   30     | REFERENCE IDENTIFIER
   31     | INTEGER
   32     | CHAR
   33     | STRING
   34     | expr ADD expr
   35     | expr MINUS expr
   36     | expr MULT expr
   37     | expr DIV expr
   38     | expr MOD expr
   39     | expr COMMA expr
   40     | LPAREN expr RPAREN
   41     | LPAREN RPAREN

   42 T: T_INT
   43  | T_CHAR
   44  | T_BOOL
   45  | T_STRING
   46  | T_VOID

   47 if_else: IF bool_statment statement
   48        | IF bool_statment statement ELSE statement

   49 while: WHILE bool_statment statements

   50 for: FOR LPAREN instruction instruction assign RPAREN statement

   51 return: RETURN SEMICOLON
   52       | RETURN expr SEMICOLON
   53       | RETURN bool_statment SEMICOLON

   54 bool_statment: LPAREN bool_statment RPAREN
   55              | bool_expr
   56              | bool_statment OR bool_expr

   57 bool_expr: TRUE
   58          | FALSE
   59          | expr EQUAL expr
   60          | NOT bool_expr
   61          | NOT expr
   62          | expr NOTEQUAL expr
   63          | expr GREATER expr
   64          | expr SMALLER expr
   65          | expr GORE expr
   66          | expr SORE expr
   67          | expr AND expr
   68          | bool_expr GREATER bool_expr
   69          | bool_expr SMALLER bool_expr
   70          | bool_expr GORE bool_expr
   71          | bool_expr SORE bool_expr
   72          | bool_expr AND bool_expr
   73          | bool_expr EQUAL bool_expr

   74 printf: PRINTF expr

   75 scanf: SCANF expr


Terminals, with rules where they appear

$end (0) 0
error (256)
IF (258) 47 48
ELSE (259) 48
WHILE (260) 49
RETURN (261) 51 52 53
FOR (262) 50
T_CHAR (263) 43
T_INT (264) 42
T_STRING (265) 45
T_BOOL (266) 44
T_VOID (267) 46
LOP_ASSIGN (268) 17 23
ADDSELF (269) 24
MINUSSELF (270) 25
SEMICOLON (271) 4 11 12 13 14 15 51 52 53
LPAREN (272) 40 41 50 54
RPAREN (273) 40 41 50 54
LBRACE (274) 19
RBRACE (275) 19
COMMA (276) 22 39
IDENTIFIER (277) 17 20 21 22 30
INTEGER (278) 31
CHAR (279) 32
BOOL (280)
STRING (281) 33
TRUE (282) 57
FALSE (283) 58
ADD (284) 34
MINUS (285) 29 35
MULT (286) 36
DIV (287) 37
MOD (288) 38
ADDADD (289) 26
MINUSMINUS (290) 27
EQUAL (291) 59 73
NOT (292) 60 61
NOTEQUAL (293) 62
GREATER (294) 63 68
SMALLER (295) 64 69
GORE (296) 65 70
SORE (297) 66 71
OR (298) 56
AND (299) 67 72
PRINTF (300) 74
SCANF (301) 75
REFERENCE (302) 30
POINTER (303)
LOWER_THEN_ELSE (304)
UMINUS (305)


Nonterminals, with rules where they appear

$accept (51)
    on left: 0
program (52)
    on left: 1, on right: 0
statements (53)
    on left: 2 3, on right: 1 3 19 49
statement (54)
    on left: 4 5 6 7 8 9 10, on right: 2 3 47 48 50
instruction (55)
    on left: 11 12 13 14 15 16, on right: 5 50
declaration (56)
    on left: 17 18, on right: 11
block (57)
    on left: 19, on right: 8 20
fucntion_declaration (58)
    on left: 20, on right: 16
IDENTIFIERS (59)
    on left: 21 22, on right: 18 22 28
assign (60)
    on left: 23 24 25 26 27, on right: 14 50
expr (61)
    on left: 28 29 30 31 32 33 34 35 36 37 38 39 40 41, on right: 17
    20 23 24 25 26 27 29 34 35 36 37 38 39 40 52 59 61 62 63 64 65
    66 67 74 75
T (62)
    on left: 42 43 44 45 46, on right: 17 18 20
if_else (63)
    on left: 47 48, on right: 6
while (64)
    on left: 49, on right: 7
for (65)
    on left: 50, on right: 9
return (66)
    on left: 51 52 53, on right: 10
bool_statment (67)
    on left: 54 55 56, on right: 15 47 48 49 53 54 56
bool_expr (68)
    on left: 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73, on right:
    55 56 60 68 69 70 71 72 73
printf (69)
    on left: 74, on right: 12
scanf (70)
    on left: 75, on right: 13


State 0

    0 $accept: . program $end

    IF          shift, and go to state 1
    WHILE       shift, and go to state 2
    RETURN      shift, and go to state 3
    FOR         shift, and go to state 4
    T_CHAR      shift, and go to state 5
    T_INT       shift, and go to state 6
    T_STRING    shift, and go to state 7
    T_BOOL      shift, and go to state 8
    T_VOID      shift, and go to state 9
    SEMICOLON   shift, and go to state 10
    LPAREN      shift, and go to state 11
    LBRACE      shift, and go to state 12
    IDENTIFIER  shift, and go to state 13
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    TRUE        shift, and go to state 17
    FALSE       shift, and go to state 18
    MINUS       shift, and go to state 19
    NOT         shift, and go to state 20
    PRINTF      shift, and go to state 21
    SCANF       shift, and go to state 22
    REFERENCE   shift, and go to state 23

    program               go to state 24
    statements            go to state 25
    statement             go to state 26
    instruction           go to state 27
    declaration           go to state 28
    block                 go to state 29
    fucntion_declaration  go to state 30
    IDENTIFIERS           go to state 31
    assign                go to state 32
    expr                  go to state 33
    T                     go to state 34
    if_else               go to state 35
    while                 go to state 36
    for                   go to state 37
    return                go to state 38
    bool_statment         go to state 39
    bool_expr             go to state 40
    printf                go to state 41
    scanf                 go to state 42


State 1

   47 if_else: IF . bool_statment statement
   48        | IF . bool_statment statement ELSE statement

    LPAREN      shift, and go to state 11
    IDENTIFIER  shift, and go to state 13
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    TRUE        shift, and go to state 17
    FALSE       shift, and go to state 18
    MINUS       shift, and go to state 19
    NOT         shift, and go to state 20
    REFERENCE   shift, and go to state 23

    IDENTIFIERS    go to state 31
    expr           go to state 43
    bool_statment  go to state 44
    bool_expr      go to state 40


State 2

   49 while: WHILE . bool_statment statements

    LPAREN      shift, and go to state 11
    IDENTIFIER  shift, and go to state 13
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    TRUE        shift, and go to state 17
    FALSE       shift, and go to state 18
    MINUS       shift, and go to state 19
    NOT         shift, and go to state 20
    REFERENCE   shift, and go to state 23

    IDENTIFIERS    go to state 31
    expr           go to state 43
    bool_statment  go to state 45
    bool_expr      go to state 40


State 3

   51 return: RETURN . SEMICOLON
   52       | RETURN . expr SEMICOLON
   53       | RETURN . bool_statment SEMICOLON

    SEMICOLON   shift, and go to state 46
    LPAREN      shift, and go to state 11
    IDENTIFIER  shift, and go to state 13
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    TRUE        shift, and go to state 17
    FALSE       shift, and go to state 18
    MINUS       shift, and go to state 19
    NOT         shift, and go to state 20
    REFERENCE   shift, and go to state 23

    IDENTIFIERS    go to state 31
    expr           go to state 47
    bool_statment  go to state 48
    bool_expr      go to state 40


State 4

   50 for: FOR . LPAREN instruction instruction assign RPAREN statement

    LPAREN  shift, and go to state 49


State 5

   43 T: T_CHAR .

    $default  reduce using rule 43 (T)


State 6

   42 T: T_INT .

    $default  reduce using rule 42 (T)


State 7

   45 T: T_STRING .

    $default  reduce using rule 45 (T)


State 8

   44 T: T_BOOL .

    $default  reduce using rule 44 (T)


State 9

   46 T: T_VOID .

    $default  reduce using rule 46 (T)


State 10

    4 statement: SEMICOLON .

    $default  reduce using rule 4 (statement)


State 11

   40 expr: LPAREN . expr RPAREN
   41     | LPAREN . RPAREN
   54 bool_statment: LPAREN . bool_statment RPAREN

    LPAREN      shift, and go to state 11
    RPAREN      shift, and go to state 50
    IDENTIFIER  shift, and go to state 13
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    TRUE        shift, and go to state 17
    FALSE       shift, and go to state 18
    MINUS       shift, and go to state 19
    NOT         shift, and go to state 20
    REFERENCE   shift, and go to state 23

    IDENTIFIERS    go to state 31
    expr           go to state 51
    bool_statment  go to state 52
    bool_expr      go to state 40


State 12

   19 block: LBRACE . statements RBRACE

    IF          shift, and go to state 1
    WHILE       shift, and go to state 2
    RETURN      shift, and go to state 3
    FOR         shift, and go to state 4
    T_CHAR      shift, and go to state 5
    T_INT       shift, and go to state 6
    T_STRING    shift, and go to state 7
    T_BOOL      shift, and go to state 8
    T_VOID      shift, and go to state 9
    SEMICOLON   shift, and go to state 10
    LPAREN      shift, and go to state 11
    LBRACE      shift, and go to state 12
    IDENTIFIER  shift, and go to state 13
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    TRUE        shift, and go to state 17
    FALSE       shift, and go to state 18
    MINUS       shift, and go to state 19
    NOT         shift, and go to state 20
    PRINTF      shift, and go to state 21
    SCANF       shift, and go to state 22
    REFERENCE   shift, and go to state 23

    statements            go to state 53
    statement             go to state 26
    instruction           go to state 27
    declaration           go to state 28
    block                 go to state 29
    fucntion_declaration  go to state 30
    IDENTIFIERS           go to state 31
    assign                go to state 32
    expr                  go to state 33
    T                     go to state 34
    if_else               go to state 35
    while                 go to state 36
    for                   go to state 37
    return                go to state 38
    bool_statment         go to state 39
    bool_expr             go to state 40
    printf                go to state 41
    scanf                 go to state 42


State 13

   21 IDENTIFIERS: IDENTIFIER .

    $default  reduce using rule 21 (IDENTIFIERS)


State 14

   31 expr: INTEGER .

    $default  reduce using rule 31 (expr)


State 15

   32 expr: CHAR .

    $default  reduce using rule 32 (expr)


State 16

   33 expr: STRING .

    $default  reduce using rule 33 (expr)


State 17

   57 bool_expr: TRUE .

    $default  reduce using rule 57 (bool_expr)


State 18

   58 bool_expr: FALSE .

    $default  reduce using rule 58 (bool_expr)


State 19

   29 expr: MINUS . expr

    LPAREN      shift, and go to state 54
    IDENTIFIER  shift, and go to state 13
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    MINUS       shift, and go to state 19
    REFERENCE   shift, and go to state 23

    IDENTIFIERS  go to state 31
    expr         go to state 55


State 20

   60 bool_expr: NOT . bool_expr
   61          | NOT . expr

    LPAREN      shift, and go to state 54
    IDENTIFIER  shift, and go to state 13
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    TRUE        shift, and go to state 17
    FALSE       shift, and go to state 18
    MINUS       shift, and go to state 19
    NOT         shift, and go to state 20
    REFERENCE   shift, and go to state 23

    IDENTIFIERS  go to state 31
    expr         go to state 56
    bool_expr    go to state 57


State 21

   74 printf: PRINTF . expr

    LPAREN      shift, and go to state 54
    IDENTIFIER  shift, and go to state 13
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    MINUS       shift, and go to state 19
    REFERENCE   shift, and go to state 23

    IDENTIFIERS  go to state 31
    expr         go to state 58


State 22

   75 scanf: SCANF . expr

    LPAREN      shift, and go to state 54
    IDENTIFIER  shift, and go to state 13
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    MINUS       shift, and go to state 19
    REFERENCE   shift, and go to state 23

    IDENTIFIERS  go to state 31
    expr         go to state 59


State 23

   30 expr: REFERENCE . IDENTIFIER

    IDENTIFIER  shift, and go to state 60


State 24

    0 $accept: program . $end

    $end  shift, and go to state 61


State 25

    1 program: statements .
    3 statements: statements . statement

    IF          shift, and go to state 1
    WHILE       shift, and go to state 2
    RETURN      shift, and go to state 3
    FOR         shift, and go to state 4
    T_CHAR      shift, and go to state 5
    T_INT       shift, and go to state 6
    T_STRING    shift, and go to state 7
    T_BOOL      shift, and go to state 8
    T_VOID      shift, and go to state 9
    SEMICOLON   shift, and go to state 10
    LPAREN      shift, and go to state 11
    LBRACE      shift, and go to state 12
    IDENTIFIER  shift, and go to state 13
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    TRUE        shift, and go to state 17
    FALSE       shift, and go to state 18
    MINUS       shift, and go to state 19
    NOT         shift, and go to state 20
    PRINTF      shift, and go to state 21
    SCANF       shift, and go to state 22
    REFERENCE   shift, and go to state 23

    $default  reduce using rule 1 (program)

    statement             go to state 62
    instruction           go to state 27
    declaration           go to state 28
    block                 go to state 29
    fucntion_declaration  go to state 30
    IDENTIFIERS           go to state 31
    assign                go to state 32
    expr                  go to state 33
    T                     go to state 34
    if_else               go to state 35
    while                 go to state 36
    for                   go to state 37
    return                go to state 38
    bool_statment         go to state 39
    bool_expr             go to state 40
    printf                go to state 41
    scanf                 go to state 42


State 26

    2 statements: statement .

    $default  reduce using rule 2 (statements)


State 27

    5 statement: instruction .

    $default  reduce using rule 5 (statement)


State 28

   11 instruction: declaration . SEMICOLON

    SEMICOLON  shift, and go to state 63


State 29

    8 statement: block .

    $default  reduce using rule 8 (statement)


State 30

   16 instruction: fucntion_declaration .

    $default  reduce using rule 16 (instruction)


State 31

   22 IDENTIFIERS: IDENTIFIERS . COMMA IDENTIFIER
   28 expr: IDENTIFIERS .

    COMMA  shift, and go to state 64

    COMMA     [reduce using rule 28 (expr)]
    $default  reduce using rule 28 (expr)


State 32

   14 instruction: assign . SEMICOLON

    SEMICOLON  shift, and go to state 65


State 33

   23 assign: expr . LOP_ASSIGN expr
   24       | expr . ADDSELF expr
   25       | expr . MINUSSELF expr
   26       | expr . ADDADD
   27       | expr . MINUSMINUS
   34 expr: expr . ADD expr
   35     | expr . MINUS expr
   36     | expr . MULT expr
   37     | expr . DIV expr
   38     | expr . MOD expr
   39     | expr . COMMA expr
   59 bool_expr: expr . EQUAL expr
   62          | expr . NOTEQUAL expr
   63          | expr . GREATER expr
   64          | expr . SMALLER expr
   65          | expr . GORE expr
   66          | expr . SORE expr
   67          | expr . AND expr

    LOP_ASSIGN  shift, and go to state 66
    ADDSELF     shift, and go to state 67
    MINUSSELF   shift, and go to state 68
    COMMA       shift, and go to state 69
    ADD         shift, and go to state 70
    MINUS       shift, and go to state 71
    MULT        shift, and go to state 72
    DIV         shift, and go to state 73
    MOD         shift, and go to state 74
    ADDADD      shift, and go to state 75
    MINUSMINUS  shift, and go to state 76
    EQUAL       shift, and go to state 77
    NOTEQUAL    shift, and go to state 78
    GREATER     shift, and go to state 79
    SMALLER     shift, and go to state 80
    GORE        shift, and go to state 81
    SORE        shift, and go to state 82
    AND         shift, and go to state 83


State 34

   17 declaration: T . IDENTIFIER LOP_ASSIGN expr
   18            | T . IDENTIFIERS
   20 fucntion_declaration: T . IDENTIFIER expr block

    IDENTIFIER  shift, and go to state 84

    IDENTIFIERS  go to state 85


State 35

    6 statement: if_else .

    $default  reduce using rule 6 (statement)


State 36

    7 statement: while .

    $default  reduce using rule 7 (statement)


State 37

    9 statement: for .

    $default  reduce using rule 9 (statement)


State 38

   10 statement: return .

    $default  reduce using rule 10 (statement)


State 39

   15 instruction: bool_statment . SEMICOLON
   56 bool_statment: bool_statment . OR bool_expr

    SEMICOLON  shift, and go to state 86
    OR         shift, and go to state 87


State 40

   55 bool_statment: bool_expr .
   68 bool_expr: bool_expr . GREATER bool_expr
   69          | bool_expr . SMALLER bool_expr
   70          | bool_expr . GORE bool_expr
   71          | bool_expr . SORE bool_expr
   72          | bool_expr . AND bool_expr
   73          | bool_expr . EQUAL bool_expr

    EQUAL    shift, and go to state 88
    GREATER  shift, and go to state 89
    SMALLER  shift, and go to state 90
    GORE     shift, and go to state 91
    SORE     shift, and go to state 92
    AND      shift, and go to state 93

    $default  reduce using rule 55 (bool_statment)


State 41

   12 instruction: printf . SEMICOLON

    SEMICOLON  shift, and go to state 94


State 42

   13 instruction: scanf . SEMICOLON

    SEMICOLON  shift, and go to state 95


State 43

   34 expr: expr . ADD expr
   35     | expr . MINUS expr
   36     | expr . MULT expr
   37     | expr . DIV expr
   38     | expr . MOD expr
   39     | expr . COMMA expr
   59 bool_expr: expr . EQUAL expr
   62          | expr . NOTEQUAL expr
   63          | expr . GREATER expr
   64          | expr . SMALLER expr
   65          | expr . GORE expr
   66          | expr . SORE expr
   67          | expr . AND expr

    COMMA     shift, and go to state 69
    ADD       shift, and go to state 70
    MINUS     shift, and go to state 71
    MULT      shift, and go to state 72
    DIV       shift, and go to state 73
    MOD       shift, and go to state 74
    EQUAL     shift, and go to state 77
    NOTEQUAL  shift, and go to state 78
    GREATER   shift, and go to state 79
    SMALLER   shift, and go to state 80
    GORE      shift, and go to state 81
    SORE      shift, and go to state 82
    AND       shift, and go to state 83


State 44

   47 if_else: IF bool_statment . statement
   48        | IF bool_statment . statement ELSE statement
   56 bool_statment: bool_statment . OR bool_expr

    IF          shift, and go to state 1
    WHILE       shift, and go to state 2
    RETURN      shift, and go to state 3
    FOR         shift, and go to state 4
    T_CHAR      shift, and go to state 5
    T_INT       shift, and go to state 6
    T_STRING    shift, and go to state 7
    T_BOOL      shift, and go to state 8
    T_VOID      shift, and go to state 9
    SEMICOLON   shift, and go to state 10
    LPAREN      shift, and go to state 11
    LBRACE      shift, and go to state 12
    IDENTIFIER  shift, and go to state 13
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    TRUE        shift, and go to state 17
    FALSE       shift, and go to state 18
    MINUS       shift, and go to state 19
    NOT         shift, and go to state 20
    OR          shift, and go to state 87
    PRINTF      shift, and go to state 21
    SCANF       shift, and go to state 22
    REFERENCE   shift, and go to state 23

    statement             go to state 96
    instruction           go to state 27
    declaration           go to state 28
    block                 go to state 29
    fucntion_declaration  go to state 30
    IDENTIFIERS           go to state 31
    assign                go to state 32
    expr                  go to state 33
    T                     go to state 34
    if_else               go to state 35
    while                 go to state 36
    for                   go to state 37
    return                go to state 38
    bool_statment         go to state 39
    bool_expr             go to state 40
    printf                go to state 41
    scanf                 go to state 42


State 45

   49 while: WHILE bool_statment . statements
   56 bool_statment: bool_statment . OR bool_expr

    IF          shift, and go to state 1
    WHILE       shift, and go to state 2
    RETURN      shift, and go to state 3
    FOR         shift, and go to state 4
    T_CHAR      shift, and go to state 5
    T_INT       shift, and go to state 6
    T_STRING    shift, and go to state 7
    T_BOOL      shift, and go to state 8
    T_VOID      shift, and go to state 9
    SEMICOLON   shift, and go to state 10
    LPAREN      shift, and go to state 11
    LBRACE      shift, and go to state 12
    IDENTIFIER  shift, and go to state 13
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    TRUE        shift, and go to state 17
    FALSE       shift, and go to state 18
    MINUS       shift, and go to state 19
    NOT         shift, and go to state 20
    OR          shift, and go to state 87
    PRINTF      shift, and go to state 21
    SCANF       shift, and go to state 22
    REFERENCE   shift, and go to state 23

    statements            go to state 97
    statement             go to state 26
    instruction           go to state 27
    declaration           go to state 28
    block                 go to state 29
    fucntion_declaration  go to state 30
    IDENTIFIERS           go to state 31
    assign                go to state 32
    expr                  go to state 33
    T                     go to state 34
    if_else               go to state 35
    while                 go to state 36
    for                   go to state 37
    return                go to state 38
    bool_statment         go to state 39
    bool_expr             go to state 40
    printf                go to state 41
    scanf                 go to state 42


State 46

   51 return: RETURN SEMICOLON .

    $default  reduce using rule 51 (return)


State 47

   34 expr: expr . ADD expr
   35     | expr . MINUS expr
   36     | expr . MULT expr
   37     | expr . DIV expr
   38     | expr . MOD expr
   39     | expr . COMMA expr
   52 return: RETURN expr . SEMICOLON
   59 bool_expr: expr . EQUAL expr
   62          | expr . NOTEQUAL expr
   63          | expr . GREATER expr
   64          | expr . SMALLER expr
   65          | expr . GORE expr
   66          | expr . SORE expr
   67          | expr . AND expr

    SEMICOLON  shift, and go to state 98
    COMMA      shift, and go to state 69
    ADD        shift, and go to state 70
    MINUS      shift, and go to state 71
    MULT       shift, and go to state 72
    DIV        shift, and go to state 73
    MOD        shift, and go to state 74
    EQUAL      shift, and go to state 77
    NOTEQUAL   shift, and go to state 78
    GREATER    shift, and go to state 79
    SMALLER    shift, and go to state 80
    GORE       shift, and go to state 81
    SORE       shift, and go to state 82
    AND        shift, and go to state 83


State 48

   53 return: RETURN bool_statment . SEMICOLON
   56 bool_statment: bool_statment . OR bool_expr

    SEMICOLON  shift, and go to state 99
    OR         shift, and go to state 87


State 49

   50 for: FOR LPAREN . instruction instruction assign RPAREN statement

    T_CHAR      shift, and go to state 5
    T_INT       shift, and go to state 6
    T_STRING    shift, and go to state 7
    T_BOOL      shift, and go to state 8
    T_VOID      shift, and go to state 9
    LPAREN      shift, and go to state 11
    IDENTIFIER  shift, and go to state 13
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    TRUE        shift, and go to state 17
    FALSE       shift, and go to state 18
    MINUS       shift, and go to state 19
    NOT         shift, and go to state 20
    PRINTF      shift, and go to state 21
    SCANF       shift, and go to state 22
    REFERENCE   shift, and go to state 23

    instruction           go to state 100
    declaration           go to state 28
    fucntion_declaration  go to state 30
    IDENTIFIERS           go to state 31
    assign                go to state 32
    expr                  go to state 33
    T                     go to state 34
    bool_statment         go to state 39
    bool_expr             go to state 40
    printf                go to state 41
    scanf                 go to state 42


State 50

   41 expr: LPAREN RPAREN .

    $default  reduce using rule 41 (expr)


State 51

   34 expr: expr . ADD expr
   35     | expr . MINUS expr
   36     | expr . MULT expr
   37     | expr . DIV expr
   38     | expr . MOD expr
   39     | expr . COMMA expr
   40     | LPAREN expr . RPAREN
   59 bool_expr: expr . EQUAL expr
   62          | expr . NOTEQUAL expr
   63          | expr . GREATER expr
   64          | expr . SMALLER expr
   65          | expr . GORE expr
   66          | expr . SORE expr
   67          | expr . AND expr

    RPAREN    shift, and go to state 101
    COMMA     shift, and go to state 69
    ADD       shift, and go to state 70
    MINUS     shift, and go to state 71
    MULT      shift, and go to state 72
    DIV       shift, and go to state 73
    MOD       shift, and go to state 74
    EQUAL     shift, and go to state 77
    NOTEQUAL  shift, and go to state 78
    GREATER   shift, and go to state 79
    SMALLER   shift, and go to state 80
    GORE      shift, and go to state 81
    SORE      shift, and go to state 82
    AND       shift, and go to state 83


State 52

   54 bool_statment: LPAREN bool_statment . RPAREN
   56              | bool_statment . OR bool_expr

    RPAREN  shift, and go to state 102
    OR      shift, and go to state 87


State 53

    3 statements: statements . statement
   19 block: LBRACE statements . RBRACE

    IF          shift, and go to state 1
    WHILE       shift, and go to state 2
    RETURN      shift, and go to state 3
    FOR         shift, and go to state 4
    T_CHAR      shift, and go to state 5
    T_INT       shift, and go to state 6
    T_STRING    shift, and go to state 7
    T_BOOL      shift, and go to state 8
    T_VOID      shift, and go to state 9
    SEMICOLON   shift, and go to state 10
    LPAREN      shift, and go to state 11
    LBRACE      shift, and go to state 12
    RBRACE      shift, and go to state 103
    IDENTIFIER  shift, and go to state 13
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    TRUE        shift, and go to state 17
    FALSE       shift, and go to state 18
    MINUS       shift, and go to state 19
    NOT         shift, and go to state 20
    PRINTF      shift, and go to state 21
    SCANF       shift, and go to state 22
    REFERENCE   shift, and go to state 23

    statement             go to state 62
    instruction           go to state 27
    declaration           go to state 28
    block                 go to state 29
    fucntion_declaration  go to state 30
    IDENTIFIERS           go to state 31
    assign                go to state 32
    expr                  go to state 33
    T                     go to state 34
    if_else               go to state 35
    while                 go to state 36
    for                   go to state 37
    return                go to state 38
    bool_statment         go to state 39
    bool_expr             go to state 40
    printf                go to state 41
    scanf                 go to state 42


State 54

   40 expr: LPAREN . expr RPAREN
   41     | LPAREN . RPAREN

    LPAREN      shift, and go to state 54
    RPAREN      shift, and go to state 50
    IDENTIFIER  shift, and go to state 13
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    MINUS       shift, and go to state 19
    REFERENCE   shift, and go to state 23

    IDENTIFIERS  go to state 31
    expr         go to state 104


State 55

   29 expr: MINUS expr .
   34     | expr . ADD expr
   35     | expr . MINUS expr
   36     | expr . MULT expr
   37     | expr . DIV expr
   38     | expr . MOD expr
   39     | expr . COMMA expr

    COMMA  shift, and go to state 69

    COMMA     [reduce using rule 29 (expr)]
    $default  reduce using rule 29 (expr)


State 56

   34 expr: expr . ADD expr
   35     | expr . MINUS expr
   36     | expr . MULT expr
   37     | expr . DIV expr
   38     | expr . MOD expr
   39     | expr . COMMA expr
   59 bool_expr: expr . EQUAL expr
   61          | NOT expr .
   62          | expr . NOTEQUAL expr
   63          | expr . GREATER expr
   64          | expr . SMALLER expr
   65          | expr . GORE expr
   66          | expr . SORE expr
   67          | expr . AND expr

    COMMA     shift, and go to state 69
    ADD       shift, and go to state 70
    MINUS     shift, and go to state 71
    MULT      shift, and go to state 72
    DIV       shift, and go to state 73
    MOD       shift, and go to state 74
    EQUAL     shift, and go to state 77
    NOTEQUAL  shift, and go to state 78
    GREATER   shift, and go to state 79
    SMALLER   shift, and go to state 80
    GORE      shift, and go to state 81
    SORE      shift, and go to state 82

    $default  reduce using rule 61 (bool_expr)


State 57

   60 bool_expr: NOT bool_expr .
   68          | bool_expr . GREATER bool_expr
   69          | bool_expr . SMALLER bool_expr
   70          | bool_expr . GORE bool_expr
   71          | bool_expr . SORE bool_expr
   72          | bool_expr . AND bool_expr
   73          | bool_expr . EQUAL bool_expr

    EQUAL    shift, and go to state 88
    GREATER  shift, and go to state 89
    SMALLER  shift, and go to state 90
    GORE     shift, and go to state 91
    SORE     shift, and go to state 92

    $default  reduce using rule 60 (bool_expr)


State 58

   34 expr: expr . ADD expr
   35     | expr . MINUS expr
   36     | expr . MULT expr
   37     | expr . DIV expr
   38     | expr . MOD expr
   39     | expr . COMMA expr
   74 printf: PRINTF expr .

    COMMA  shift, and go to state 69
    ADD    shift, and go to state 70
    MINUS  shift, and go to state 71
    MULT   shift, and go to state 72
    DIV    shift, and go to state 73
    MOD    shift, and go to state 74

    $default  reduce using rule 74 (printf)


State 59

   34 expr: expr . ADD expr
   35     | expr . MINUS expr
   36     | expr . MULT expr
   37     | expr . DIV expr
   38     | expr . MOD expr
   39     | expr . COMMA expr
   75 scanf: SCANF expr .

    COMMA  shift, and go to state 69
    ADD    shift, and go to state 70
    MINUS  shift, and go to state 71
    MULT   shift, and go to state 72
    DIV    shift, and go to state 73
    MOD    shift, and go to state 74

    $default  reduce using rule 75 (scanf)


State 60

   30 expr: REFERENCE IDENTIFIER .

    $default  reduce using rule 30 (expr)


State 61

    0 $accept: program $end .

    $default  accept


State 62

    3 statements: statements statement .

    $default  reduce using rule 3 (statements)


State 63

   11 instruction: declaration SEMICOLON .

    $default  reduce using rule 11 (instruction)


State 64

   22 IDENTIFIERS: IDENTIFIERS COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 105


State 65

   14 instruction: assign SEMICOLON .

    $default  reduce using rule 14 (instruction)


State 66

   23 assign: expr LOP_ASSIGN . expr

    LPAREN      shift, and go to state 54
    IDENTIFIER  shift, and go to state 13
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    MINUS       shift, and go to state 19
    REFERENCE   shift, and go to state 23

    IDENTIFIERS  go to state 31
    expr         go to state 106


State 67

   24 assign: expr ADDSELF . expr

    LPAREN      shift, and go to state 54
    IDENTIFIER  shift, and go to state 13
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    MINUS       shift, and go to state 19
    REFERENCE   shift, and go to state 23

    IDENTIFIERS  go to state 31
    expr         go to state 107


State 68

   25 assign: expr MINUSSELF . expr

    LPAREN      shift, and go to state 54
    IDENTIFIER  shift, and go to state 13
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    MINUS       shift, and go to state 19
    REFERENCE   shift, and go to state 23

    IDENTIFIERS  go to state 31
    expr         go to state 108


State 69

   39 expr: expr COMMA . expr

    LPAREN      shift, and go to state 54
    IDENTIFIER  shift, and go to state 13
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    MINUS       shift, and go to state 19
    REFERENCE   shift, and go to state 23

    IDENTIFIERS  go to state 31
    expr         go to state 109


State 70

   34 expr: expr ADD . expr

    LPAREN      shift, and go to state 54
    IDENTIFIER  shift, and go to state 13
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    MINUS       shift, and go to state 19
    REFERENCE   shift, and go to state 23

    IDENTIFIERS  go to state 31
    expr         go to state 110


State 71

   35 expr: expr MINUS . expr

    LPAREN      shift, and go to state 54
    IDENTIFIER  shift, and go to state 13
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    MINUS       shift, and go to state 19
    REFERENCE   shift, and go to state 23

    IDENTIFIERS  go to state 31
    expr         go to state 111


State 72

   36 expr: expr MULT . expr

    LPAREN      shift, and go to state 54
    IDENTIFIER  shift, and go to state 13
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    MINUS       shift, and go to state 19
    REFERENCE   shift, and go to state 23

    IDENTIFIERS  go to state 31
    expr         go to state 112


State 73

   37 expr: expr DIV . expr

    LPAREN      shift, and go to state 54
    IDENTIFIER  shift, and go to state 13
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    MINUS       shift, and go to state 19
    REFERENCE   shift, and go to state 23

    IDENTIFIERS  go to state 31
    expr         go to state 113


State 74

   38 expr: expr MOD . expr

    LPAREN      shift, and go to state 54
    IDENTIFIER  shift, and go to state 13
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    MINUS       shift, and go to state 19
    REFERENCE   shift, and go to state 23

    IDENTIFIERS  go to state 31
    expr         go to state 114


State 75

   26 assign: expr ADDADD .

    $default  reduce using rule 26 (assign)


State 76

   27 assign: expr MINUSMINUS .

    $default  reduce using rule 27 (assign)


State 77

   59 bool_expr: expr EQUAL . expr

    LPAREN      shift, and go to state 54
    IDENTIFIER  shift, and go to state 13
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    MINUS       shift, and go to state 19
    REFERENCE   shift, and go to state 23

    IDENTIFIERS  go to state 31
    expr         go to state 115


State 78

   62 bool_expr: expr NOTEQUAL . expr

    LPAREN      shift, and go to state 54
    IDENTIFIER  shift, and go to state 13
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    MINUS       shift, and go to state 19
    REFERENCE   shift, and go to state 23

    IDENTIFIERS  go to state 31
    expr         go to state 116


State 79

   63 bool_expr: expr GREATER . expr

    LPAREN      shift, and go to state 54
    IDENTIFIER  shift, and go to state 13
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    MINUS       shift, and go to state 19
    REFERENCE   shift, and go to state 23

    IDENTIFIERS  go to state 31
    expr         go to state 117


State 80

   64 bool_expr: expr SMALLER . expr

    LPAREN      shift, and go to state 54
    IDENTIFIER  shift, and go to state 13
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    MINUS       shift, and go to state 19
    REFERENCE   shift, and go to state 23

    IDENTIFIERS  go to state 31
    expr         go to state 118


State 81

   65 bool_expr: expr GORE . expr

    LPAREN      shift, and go to state 54
    IDENTIFIER  shift, and go to state 13
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    MINUS       shift, and go to state 19
    REFERENCE   shift, and go to state 23

    IDENTIFIERS  go to state 31
    expr         go to state 119


State 82

   66 bool_expr: expr SORE . expr

    LPAREN      shift, and go to state 54
    IDENTIFIER  shift, and go to state 13
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    MINUS       shift, and go to state 19
    REFERENCE   shift, and go to state 23

    IDENTIFIERS  go to state 31
    expr         go to state 120


State 83

   67 bool_expr: expr AND . expr

    LPAREN      shift, and go to state 54
    IDENTIFIER  shift, and go to state 13
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    MINUS       shift, and go to state 19
    REFERENCE   shift, and go to state 23

    IDENTIFIERS  go to state 31
    expr         go to state 121


State 84

   17 declaration: T IDENTIFIER . LOP_ASSIGN expr
   20 fucntion_declaration: T IDENTIFIER . expr block
   21 IDENTIFIERS: IDENTIFIER .

    LOP_ASSIGN  shift, and go to state 122
    LPAREN      shift, and go to state 54
    IDENTIFIER  shift, and go to state 13
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    MINUS       shift, and go to state 19
    REFERENCE   shift, and go to state 23

    $default  reduce using rule 21 (IDENTIFIERS)

    IDENTIFIERS  go to state 31
    expr         go to state 123


State 85

   18 declaration: T IDENTIFIERS .
   22 IDENTIFIERS: IDENTIFIERS . COMMA IDENTIFIER

    COMMA  shift, and go to state 64

    $default  reduce using rule 18 (declaration)


State 86

   15 instruction: bool_statment SEMICOLON .

    $default  reduce using rule 15 (instruction)


State 87

   56 bool_statment: bool_statment OR . bool_expr

    LPAREN      shift, and go to state 54
    IDENTIFIER  shift, and go to state 13
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    TRUE        shift, and go to state 17
    FALSE       shift, and go to state 18
    MINUS       shift, and go to state 19
    NOT         shift, and go to state 20
    REFERENCE   shift, and go to state 23

    IDENTIFIERS  go to state 31
    expr         go to state 43
    bool_expr    go to state 124


State 88

   73 bool_expr: bool_expr EQUAL . bool_expr

    LPAREN      shift, and go to state 54
    IDENTIFIER  shift, and go to state 13
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    TRUE        shift, and go to state 17
    FALSE       shift, and go to state 18
    MINUS       shift, and go to state 19
    NOT         shift, and go to state 20
    REFERENCE   shift, and go to state 23

    IDENTIFIERS  go to state 31
    expr         go to state 43
    bool_expr    go to state 125


State 89

   68 bool_expr: bool_expr GREATER . bool_expr

    LPAREN      shift, and go to state 54
    IDENTIFIER  shift, and go to state 13
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    TRUE        shift, and go to state 17
    FALSE       shift, and go to state 18
    MINUS       shift, and go to state 19
    NOT         shift, and go to state 20
    REFERENCE   shift, and go to state 23

    IDENTIFIERS  go to state 31
    expr         go to state 43
    bool_expr    go to state 126


State 90

   69 bool_expr: bool_expr SMALLER . bool_expr

    LPAREN      shift, and go to state 54
    IDENTIFIER  shift, and go to state 13
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    TRUE        shift, and go to state 17
    FALSE       shift, and go to state 18
    MINUS       shift, and go to state 19
    NOT         shift, and go to state 20
    REFERENCE   shift, and go to state 23

    IDENTIFIERS  go to state 31
    expr         go to state 43
    bool_expr    go to state 127


State 91

   70 bool_expr: bool_expr GORE . bool_expr

    LPAREN      shift, and go to state 54
    IDENTIFIER  shift, and go to state 13
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    TRUE        shift, and go to state 17
    FALSE       shift, and go to state 18
    MINUS       shift, and go to state 19
    NOT         shift, and go to state 20
    REFERENCE   shift, and go to state 23

    IDENTIFIERS  go to state 31
    expr         go to state 43
    bool_expr    go to state 128


State 92

   71 bool_expr: bool_expr SORE . bool_expr

    LPAREN      shift, and go to state 54
    IDENTIFIER  shift, and go to state 13
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    TRUE        shift, and go to state 17
    FALSE       shift, and go to state 18
    MINUS       shift, and go to state 19
    NOT         shift, and go to state 20
    REFERENCE   shift, and go to state 23

    IDENTIFIERS  go to state 31
    expr         go to state 43
    bool_expr    go to state 129


State 93

   72 bool_expr: bool_expr AND . bool_expr

    LPAREN      shift, and go to state 54
    IDENTIFIER  shift, and go to state 13
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    TRUE        shift, and go to state 17
    FALSE       shift, and go to state 18
    MINUS       shift, and go to state 19
    NOT         shift, and go to state 20
    REFERENCE   shift, and go to state 23

    IDENTIFIERS  go to state 31
    expr         go to state 43
    bool_expr    go to state 130


State 94

   12 instruction: printf SEMICOLON .

    $default  reduce using rule 12 (instruction)


State 95

   13 instruction: scanf SEMICOLON .

    $default  reduce using rule 13 (instruction)


State 96

   47 if_else: IF bool_statment statement .
   48        | IF bool_statment statement . ELSE statement

    ELSE  shift, and go to state 131

    $default  reduce using rule 47 (if_else)


State 97

    3 statements: statements . statement
   49 while: WHILE bool_statment statements .

    IF          shift, and go to state 1
    WHILE       shift, and go to state 2
    RETURN      shift, and go to state 3
    FOR         shift, and go to state 4
    T_CHAR      shift, and go to state 5
    T_INT       shift, and go to state 6
    T_STRING    shift, and go to state 7
    T_BOOL      shift, and go to state 8
    T_VOID      shift, and go to state 9
    SEMICOLON   shift, and go to state 10
    LPAREN      shift, and go to state 11
    LBRACE      shift, and go to state 12
    IDENTIFIER  shift, and go to state 13
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    TRUE        shift, and go to state 17
    FALSE       shift, and go to state 18
    MINUS       shift, and go to state 19
    NOT         shift, and go to state 20
    PRINTF      shift, and go to state 21
    SCANF       shift, and go to state 22
    REFERENCE   shift, and go to state 23

    IF          [reduce using rule 49 (while)]
    WHILE       [reduce using rule 49 (while)]
    RETURN      [reduce using rule 49 (while)]
    FOR         [reduce using rule 49 (while)]
    T_CHAR      [reduce using rule 49 (while)]
    T_INT       [reduce using rule 49 (while)]
    T_STRING    [reduce using rule 49 (while)]
    T_BOOL      [reduce using rule 49 (while)]
    T_VOID      [reduce using rule 49 (while)]
    SEMICOLON   [reduce using rule 49 (while)]
    LPAREN      [reduce using rule 49 (while)]
    LBRACE      [reduce using rule 49 (while)]
    IDENTIFIER  [reduce using rule 49 (while)]
    INTEGER     [reduce using rule 49 (while)]
    CHAR        [reduce using rule 49 (while)]
    STRING      [reduce using rule 49 (while)]
    TRUE        [reduce using rule 49 (while)]
    FALSE       [reduce using rule 49 (while)]
    MINUS       [reduce using rule 49 (while)]
    NOT         [reduce using rule 49 (while)]
    PRINTF      [reduce using rule 49 (while)]
    SCANF       [reduce using rule 49 (while)]
    REFERENCE   [reduce using rule 49 (while)]
    $default    reduce using rule 49 (while)

    statement             go to state 62
    instruction           go to state 27
    declaration           go to state 28
    block                 go to state 29
    fucntion_declaration  go to state 30
    IDENTIFIERS           go to state 31
    assign                go to state 32
    expr                  go to state 33
    T                     go to state 34
    if_else               go to state 35
    while                 go to state 36
    for                   go to state 37
    return                go to state 38
    bool_statment         go to state 39
    bool_expr             go to state 40
    printf                go to state 41
    scanf                 go to state 42


State 98

   52 return: RETURN expr SEMICOLON .

    $default  reduce using rule 52 (return)


State 99

   53 return: RETURN bool_statment SEMICOLON .

    $default  reduce using rule 53 (return)


State 100

   50 for: FOR LPAREN instruction . instruction assign RPAREN statement

    T_CHAR      shift, and go to state 5
    T_INT       shift, and go to state 6
    T_STRING    shift, and go to state 7
    T_BOOL      shift, and go to state 8
    T_VOID      shift, and go to state 9
    LPAREN      shift, and go to state 11
    IDENTIFIER  shift, and go to state 13
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    TRUE        shift, and go to state 17
    FALSE       shift, and go to state 18
    MINUS       shift, and go to state 19
    NOT         shift, and go to state 20
    PRINTF      shift, and go to state 21
    SCANF       shift, and go to state 22
    REFERENCE   shift, and go to state 23

    instruction           go to state 132
    declaration           go to state 28
    fucntion_declaration  go to state 30
    IDENTIFIERS           go to state 31
    assign                go to state 32
    expr                  go to state 33
    T                     go to state 34
    bool_statment         go to state 39
    bool_expr             go to state 40
    printf                go to state 41
    scanf                 go to state 42


State 101

   40 expr: LPAREN expr RPAREN .

    $default  reduce using rule 40 (expr)


State 102

   54 bool_statment: LPAREN bool_statment RPAREN .

    $default  reduce using rule 54 (bool_statment)


State 103

   19 block: LBRACE statements RBRACE .

    $default  reduce using rule 19 (block)


State 104

   34 expr: expr . ADD expr
   35     | expr . MINUS expr
   36     | expr . MULT expr
   37     | expr . DIV expr
   38     | expr . MOD expr
   39     | expr . COMMA expr
   40     | LPAREN expr . RPAREN

    RPAREN  shift, and go to state 101
    COMMA   shift, and go to state 69
    ADD     shift, and go to state 70
    MINUS   shift, and go to state 71
    MULT    shift, and go to state 72
    DIV     shift, and go to state 73
    MOD     shift, and go to state 74


State 105

   22 IDENTIFIERS: IDENTIFIERS COMMA IDENTIFIER .

    $default  reduce using rule 22 (IDENTIFIERS)


State 106

   23 assign: expr LOP_ASSIGN expr .
   34 expr: expr . ADD expr
   35     | expr . MINUS expr
   36     | expr . MULT expr
   37     | expr . DIV expr
   38     | expr . MOD expr
   39     | expr . COMMA expr

    COMMA  shift, and go to state 69
    ADD    shift, and go to state 70
    MINUS  shift, and go to state 71
    MULT   shift, and go to state 72
    DIV    shift, and go to state 73
    MOD    shift, and go to state 74

    $default  reduce using rule 23 (assign)


State 107

   24 assign: expr ADDSELF expr .
   34 expr: expr . ADD expr
   35     | expr . MINUS expr
   36     | expr . MULT expr
   37     | expr . DIV expr
   38     | expr . MOD expr
   39     | expr . COMMA expr

    COMMA  shift, and go to state 69
    ADD    shift, and go to state 70
    MINUS  shift, and go to state 71
    MULT   shift, and go to state 72
    DIV    shift, and go to state 73
    MOD    shift, and go to state 74

    $default  reduce using rule 24 (assign)


State 108

   25 assign: expr MINUSSELF expr .
   34 expr: expr . ADD expr
   35     | expr . MINUS expr
   36     | expr . MULT expr
   37     | expr . DIV expr
   38     | expr . MOD expr
   39     | expr . COMMA expr

    COMMA  shift, and go to state 69
    ADD    shift, and go to state 70
    MINUS  shift, and go to state 71
    MULT   shift, and go to state 72
    DIV    shift, and go to state 73
    MOD    shift, and go to state 74

    $default  reduce using rule 25 (assign)


State 109

   34 expr: expr . ADD expr
   35     | expr . MINUS expr
   36     | expr . MULT expr
   37     | expr . DIV expr
   38     | expr . MOD expr
   39     | expr . COMMA expr
   39     | expr COMMA expr .

    COMMA  shift, and go to state 69
    ADD    shift, and go to state 70
    MINUS  shift, and go to state 71
    MULT   shift, and go to state 72
    DIV    shift, and go to state 73
    MOD    shift, and go to state 74

    COMMA     [reduce using rule 39 (expr)]
    ADD       [reduce using rule 39 (expr)]
    MINUS     [reduce using rule 39 (expr)]
    MULT      [reduce using rule 39 (expr)]
    DIV       [reduce using rule 39 (expr)]
    MOD       [reduce using rule 39 (expr)]
    $default  reduce using rule 39 (expr)


State 110

   34 expr: expr . ADD expr
   34     | expr ADD expr .
   35     | expr . MINUS expr
   36     | expr . MULT expr
   37     | expr . DIV expr
   38     | expr . MOD expr
   39     | expr . COMMA expr

    COMMA  shift, and go to state 69

    COMMA     [reduce using rule 34 (expr)]
    $default  reduce using rule 34 (expr)


State 111

   34 expr: expr . ADD expr
   35     | expr . MINUS expr
   35     | expr MINUS expr .
   36     | expr . MULT expr
   37     | expr . DIV expr
   38     | expr . MOD expr
   39     | expr . COMMA expr

    COMMA  shift, and go to state 69

    COMMA     [reduce using rule 35 (expr)]
    $default  reduce using rule 35 (expr)


State 112

   34 expr: expr . ADD expr
   35     | expr . MINUS expr
   36     | expr . MULT expr
   36     | expr MULT expr .
   37     | expr . DIV expr
   38     | expr . MOD expr
   39     | expr . COMMA expr

    COMMA  shift, and go to state 69

    COMMA     [reduce using rule 36 (expr)]
    $default  reduce using rule 36 (expr)


State 113

   34 expr: expr . ADD expr
   35     | expr . MINUS expr
   36     | expr . MULT expr
   37     | expr . DIV expr
   37     | expr DIV expr .
   38     | expr . MOD expr
   39     | expr . COMMA expr

    COMMA  shift, and go to state 69

    COMMA     [reduce using rule 37 (expr)]
    $default  reduce using rule 37 (expr)


State 114

   34 expr: expr . ADD expr
   35     | expr . MINUS expr
   36     | expr . MULT expr
   37     | expr . DIV expr
   38     | expr . MOD expr
   38     | expr MOD expr .
   39     | expr . COMMA expr

    COMMA  shift, and go to state 69

    COMMA     [reduce using rule 38 (expr)]
    $default  reduce using rule 38 (expr)


State 115

   34 expr: expr . ADD expr
   35     | expr . MINUS expr
   36     | expr . MULT expr
   37     | expr . DIV expr
   38     | expr . MOD expr
   39     | expr . COMMA expr
   59 bool_expr: expr EQUAL expr .

    COMMA  shift, and go to state 69
    ADD    shift, and go to state 70
    MULT   shift, and go to state 72
    DIV    shift, and go to state 73
    MOD    shift, and go to state 74

    $default  reduce using rule 59 (bool_expr)


State 116

   34 expr: expr . ADD expr
   35     | expr . MINUS expr
   36     | expr . MULT expr
   37     | expr . DIV expr
   38     | expr . MOD expr
   39     | expr . COMMA expr
   62 bool_expr: expr NOTEQUAL expr .

    COMMA  shift, and go to state 69
    ADD    shift, and go to state 70
    MULT   shift, and go to state 72
    DIV    shift, and go to state 73
    MOD    shift, and go to state 74

    $default  reduce using rule 62 (bool_expr)


State 117

   34 expr: expr . ADD expr
   35     | expr . MINUS expr
   36     | expr . MULT expr
   37     | expr . DIV expr
   38     | expr . MOD expr
   39     | expr . COMMA expr
   63 bool_expr: expr GREATER expr .

    COMMA  shift, and go to state 69
    ADD    shift, and go to state 70
    MULT   shift, and go to state 72
    DIV    shift, and go to state 73
    MOD    shift, and go to state 74

    $default  reduce using rule 63 (bool_expr)


State 118

   34 expr: expr . ADD expr
   35     | expr . MINUS expr
   36     | expr . MULT expr
   37     | expr . DIV expr
   38     | expr . MOD expr
   39     | expr . COMMA expr
   64 bool_expr: expr SMALLER expr .

    COMMA  shift, and go to state 69
    ADD    shift, and go to state 70
    MULT   shift, and go to state 72
    DIV    shift, and go to state 73
    MOD    shift, and go to state 74

    $default  reduce using rule 64 (bool_expr)


State 119

   34 expr: expr . ADD expr
   35     | expr . MINUS expr
   36     | expr . MULT expr
   37     | expr . DIV expr
   38     | expr . MOD expr
   39     | expr . COMMA expr
   65 bool_expr: expr GORE expr .

    COMMA  shift, and go to state 69
    ADD    shift, and go to state 70
    MULT   shift, and go to state 72
    DIV    shift, and go to state 73
    MOD    shift, and go to state 74

    $default  reduce using rule 65 (bool_expr)


State 120

   34 expr: expr . ADD expr
   35     | expr . MINUS expr
   36     | expr . MULT expr
   37     | expr . DIV expr
   38     | expr . MOD expr
   39     | expr . COMMA expr
   66 bool_expr: expr SORE expr .

    COMMA  shift, and go to state 69
    ADD    shift, and go to state 70
    MULT   shift, and go to state 72
    DIV    shift, and go to state 73
    MOD    shift, and go to state 74

    $default  reduce using rule 66 (bool_expr)


State 121

   34 expr: expr . ADD expr
   35     | expr . MINUS expr
   36     | expr . MULT expr
   37     | expr . DIV expr
   38     | expr . MOD expr
   39     | expr . COMMA expr
   67 bool_expr: expr AND expr .

    COMMA  shift, and go to state 69
    ADD    shift, and go to state 70
    MINUS  shift, and go to state 71
    MULT   shift, and go to state 72
    DIV    shift, and go to state 73
    MOD    shift, and go to state 74

    $default  reduce using rule 67 (bool_expr)


State 122

   17 declaration: T IDENTIFIER LOP_ASSIGN . expr

    LPAREN      shift, and go to state 54
    IDENTIFIER  shift, and go to state 13
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    MINUS       shift, and go to state 19
    REFERENCE   shift, and go to state 23

    IDENTIFIERS  go to state 31
    expr         go to state 133


State 123

   20 fucntion_declaration: T IDENTIFIER expr . block
   34 expr: expr . ADD expr
   35     | expr . MINUS expr
   36     | expr . MULT expr
   37     | expr . DIV expr
   38     | expr . MOD expr
   39     | expr . COMMA expr

    LBRACE  shift, and go to state 12
    COMMA   shift, and go to state 69
    ADD     shift, and go to state 70
    MINUS   shift, and go to state 71
    MULT    shift, and go to state 72
    DIV     shift, and go to state 73
    MOD     shift, and go to state 74

    block  go to state 134


State 124

   56 bool_statment: bool_statment OR bool_expr .
   68 bool_expr: bool_expr . GREATER bool_expr
   69          | bool_expr . SMALLER bool_expr
   70          | bool_expr . GORE bool_expr
   71          | bool_expr . SORE bool_expr
   72          | bool_expr . AND bool_expr
   73          | bool_expr . EQUAL bool_expr

    EQUAL    shift, and go to state 88
    GREATER  shift, and go to state 89
    SMALLER  shift, and go to state 90
    GORE     shift, and go to state 91
    SORE     shift, and go to state 92
    AND      shift, and go to state 93

    $default  reduce using rule 56 (bool_statment)


State 125

   68 bool_expr: bool_expr . GREATER bool_expr
   69          | bool_expr . SMALLER bool_expr
   70          | bool_expr . GORE bool_expr
   71          | bool_expr . SORE bool_expr
   72          | bool_expr . AND bool_expr
   73          | bool_expr . EQUAL bool_expr
   73          | bool_expr EQUAL bool_expr .

    GREATER  shift, and go to state 89
    SMALLER  shift, and go to state 90
    GORE     shift, and go to state 91
    SORE     shift, and go to state 92

    $default  reduce using rule 73 (bool_expr)


State 126

   68 bool_expr: bool_expr . GREATER bool_expr
   68          | bool_expr GREATER bool_expr .
   69          | bool_expr . SMALLER bool_expr
   70          | bool_expr . GORE bool_expr
   71          | bool_expr . SORE bool_expr
   72          | bool_expr . AND bool_expr
   73          | bool_expr . EQUAL bool_expr

    $default  reduce using rule 68 (bool_expr)


State 127

   68 bool_expr: bool_expr . GREATER bool_expr
   69          | bool_expr . SMALLER bool_expr
   69          | bool_expr SMALLER bool_expr .
   70          | bool_expr . GORE bool_expr
   71          | bool_expr . SORE bool_expr
   72          | bool_expr . AND bool_expr
   73          | bool_expr . EQUAL bool_expr

    $default  reduce using rule 69 (bool_expr)


State 128

   68 bool_expr: bool_expr . GREATER bool_expr
   69          | bool_expr . SMALLER bool_expr
   70          | bool_expr . GORE bool_expr
   70          | bool_expr GORE bool_expr .
   71          | bool_expr . SORE bool_expr
   72          | bool_expr . AND bool_expr
   73          | bool_expr . EQUAL bool_expr

    $default  reduce using rule 70 (bool_expr)


State 129

   68 bool_expr: bool_expr . GREATER bool_expr
   69          | bool_expr . SMALLER bool_expr
   70          | bool_expr . GORE bool_expr
   71          | bool_expr . SORE bool_expr
   71          | bool_expr SORE bool_expr .
   72          | bool_expr . AND bool_expr
   73          | bool_expr . EQUAL bool_expr

    $default  reduce using rule 71 (bool_expr)


State 130

   68 bool_expr: bool_expr . GREATER bool_expr
   69          | bool_expr . SMALLER bool_expr
   70          | bool_expr . GORE bool_expr
   71          | bool_expr . SORE bool_expr
   72          | bool_expr . AND bool_expr
   72          | bool_expr AND bool_expr .
   73          | bool_expr . EQUAL bool_expr

    EQUAL    shift, and go to state 88
    GREATER  shift, and go to state 89
    SMALLER  shift, and go to state 90
    GORE     shift, and go to state 91
    SORE     shift, and go to state 92

    $default  reduce using rule 72 (bool_expr)


State 131

   48 if_else: IF bool_statment statement ELSE . statement

    IF          shift, and go to state 1
    WHILE       shift, and go to state 2
    RETURN      shift, and go to state 3
    FOR         shift, and go to state 4
    T_CHAR      shift, and go to state 5
    T_INT       shift, and go to state 6
    T_STRING    shift, and go to state 7
    T_BOOL      shift, and go to state 8
    T_VOID      shift, and go to state 9
    SEMICOLON   shift, and go to state 10
    LPAREN      shift, and go to state 11
    LBRACE      shift, and go to state 12
    IDENTIFIER  shift, and go to state 13
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    TRUE        shift, and go to state 17
    FALSE       shift, and go to state 18
    MINUS       shift, and go to state 19
    NOT         shift, and go to state 20
    PRINTF      shift, and go to state 21
    SCANF       shift, and go to state 22
    REFERENCE   shift, and go to state 23

    statement             go to state 135
    instruction           go to state 27
    declaration           go to state 28
    block                 go to state 29
    fucntion_declaration  go to state 30
    IDENTIFIERS           go to state 31
    assign                go to state 32
    expr                  go to state 33
    T                     go to state 34
    if_else               go to state 35
    while                 go to state 36
    for                   go to state 37
    return                go to state 38
    bool_statment         go to state 39
    bool_expr             go to state 40
    printf                go to state 41
    scanf                 go to state 42


State 132

   50 for: FOR LPAREN instruction instruction . assign RPAREN statement

    LPAREN      shift, and go to state 54
    IDENTIFIER  shift, and go to state 13
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    MINUS       shift, and go to state 19
    REFERENCE   shift, and go to state 23

    IDENTIFIERS  go to state 31
    assign       go to state 136
    expr         go to state 137


State 133

   17 declaration: T IDENTIFIER LOP_ASSIGN expr .
   34 expr: expr . ADD expr
   35     | expr . MINUS expr
   36     | expr . MULT expr
   37     | expr . DIV expr
   38     | expr . MOD expr
   39     | expr . COMMA expr

    COMMA  shift, and go to state 69
    ADD    shift, and go to state 70
    MINUS  shift, and go to state 71
    MULT   shift, and go to state 72
    DIV    shift, and go to state 73
    MOD    shift, and go to state 74

    $default  reduce using rule 17 (declaration)


State 134

   20 fucntion_declaration: T IDENTIFIER expr block .

    $default  reduce using rule 20 (fucntion_declaration)


State 135

   48 if_else: IF bool_statment statement ELSE statement .

    $default  reduce using rule 48 (if_else)


State 136

   50 for: FOR LPAREN instruction instruction assign . RPAREN statement

    RPAREN  shift, and go to state 138


State 137

   23 assign: expr . LOP_ASSIGN expr
   24       | expr . ADDSELF expr
   25       | expr . MINUSSELF expr
   26       | expr . ADDADD
   27       | expr . MINUSMINUS
   34 expr: expr . ADD expr
   35     | expr . MINUS expr
   36     | expr . MULT expr
   37     | expr . DIV expr
   38     | expr . MOD expr
   39     | expr . COMMA expr

    LOP_ASSIGN  shift, and go to state 66
    ADDSELF     shift, and go to state 67
    MINUSSELF   shift, and go to state 68
    COMMA       shift, and go to state 69
    ADD         shift, and go to state 70
    MINUS       shift, and go to state 71
    MULT        shift, and go to state 72
    DIV         shift, and go to state 73
    MOD         shift, and go to state 74
    ADDADD      shift, and go to state 75
    MINUSMINUS  shift, and go to state 76


State 138

   50 for: FOR LPAREN instruction instruction assign RPAREN . statement

    IF          shift, and go to state 1
    WHILE       shift, and go to state 2
    RETURN      shift, and go to state 3
    FOR         shift, and go to state 4
    T_CHAR      shift, and go to state 5
    T_INT       shift, and go to state 6
    T_STRING    shift, and go to state 7
    T_BOOL      shift, and go to state 8
    T_VOID      shift, and go to state 9
    SEMICOLON   shift, and go to state 10
    LPAREN      shift, and go to state 11
    LBRACE      shift, and go to state 12
    IDENTIFIER  shift, and go to state 13
    INTEGER     shift, and go to state 14
    CHAR        shift, and go to state 15
    STRING      shift, and go to state 16
    TRUE        shift, and go to state 17
    FALSE       shift, and go to state 18
    MINUS       shift, and go to state 19
    NOT         shift, and go to state 20
    PRINTF      shift, and go to state 21
    SCANF       shift, and go to state 22
    REFERENCE   shift, and go to state 23

    statement             go to state 139
    instruction           go to state 27
    declaration           go to state 28
    block                 go to state 29
    fucntion_declaration  go to state 30
    IDENTIFIERS           go to state 31
    assign                go to state 32
    expr                  go to state 33
    T                     go to state 34
    if_else               go to state 35
    while                 go to state 36
    for                   go to state 37
    return                go to state 38
    bool_statment         go to state 39
    bool_expr             go to state 40
    printf                go to state 41
    scanf                 go to state 42


State 139

   50 for: FOR LPAREN instruction instruction assign RPAREN statement .

    $default  reduce using rule 50 (for)
